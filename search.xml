<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何批量导入阿里icon</title>
    <url>/htwm_open_sesame/2020/10/13/yuque/%E5%A6%82%E4%BD%95%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5%E9%98%BF%E9%87%8Cicon/</url>
    <content><![CDATA[<p><a name="ea9f3735"></a></p><h1 id="如何批量导出阿里icon"><a href="#如何批量导出阿里icon" class="headerlink" title="如何批量导出阿里icon"></a>如何批量导出阿里icon</h1><p><br>原文章来源  <a href="https://www.jianshu.com/p/59dd28f0b9c9" target="_blank" rel="noopener">https://www.jianshu.com/p/59dd28f0b9c9</a><br><br>阿里icon 素材网站  <a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a><br></p><p><a name="ae28ce60"></a></p><h2 id="下载图标"><a href="#下载图标" class="headerlink" title="下载图标"></a>下载图标</h2><ul>
<li>如何批量将素材导入购物车 比如在以下页面</li>
</ul><p><br><img src="https://htwm623.github.io/htwm_open_sesame/images/2019-10-28_220857.png#align=left&display=inline&height=748&margin=%5Bobject%20Object%5D&originHeight=748&originWidth=1280&status=done&style=none&width=1280" alt><br>在该页面下调出控制台   在控制台执行如下代码 (亲测:2019年10月28日)<br></p><a id="more"></a>




<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> icons = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.icon-gouwuche1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> auto_click = <span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123; <span class="keyword">if</span> (i &lt; icons.length) &#123; setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; icons.item(i).click(); auto_click(i + <span class="number">1</span>); &#125;, <span class="number">600</span>); &#125; &#125;;</span><br><span class="line"></span><br><span class="line">auto_click(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p><br>则会自动添加代码至购物车 -&gt; 添加至项目 -&gt; 选择 fontclass 然后下载至本地<br></p>
<p><a name="f12d3480"></a></p>
<h2 id="调用图标"><a href="#调用图标" class="headerlink" title="调用图标"></a>调用图标</h2><ol>
<li>将下载的文件全部放入项目的assert 文件下</li>
<li>在main.js 中将 iconfont.css 文件引入(个人使用,略过 原文章中修改iconfont.css )</li>
<li>查看incofont.css 文件中 font-family的值,如:</li>
</ol>
<p><br><img src="https://htwm623.github.io/htwm_open_sesame/images/2019-10-28_233757.png#align=left&display=inline&height=160&margin=%5Bobject%20Object%5D&originHeight=160&originWidth=790&status=done&style=none&width=790" alt><br><br>红框即为 fontfamily<br></p>
<ol start="4">
<li>调用```html<br><i class="iconfont icon-bad-fill"></i><pre><code>&lt;br /&gt;class空格前部分为 fontfamliy的值 后面一部分可在阿里icon项目页面进行复制&lt;br /&gt;以上
</code></pre></li>
</ol>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>阿里图标</tag>
      </tags>
  </entry>
  <entry>
    <title>收藏的文章及网站</title>
    <url>/htwm_open_sesame/2020/10/13/yuque/%E6%94%B6%E8%97%8F%E7%9A%84%E6%96%87%E7%AB%A0%E5%8F%8A%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<p><a name="b566d36f"></a></p><h1 id="收藏的文章及网站"><a href="#收藏的文章及网站" class="headerlink" title="收藏的文章及网站"></a>收藏的文章及网站</h1><p><a name="fb4ec8b1"></a></p><h2 id="收藏的网站"><a href="#收藏的网站" class="headerlink" title="收藏的网站"></a>收藏的网站</h2><ol>
<li><a href="https://www.hackerrank.com/dashboard" target="_blank" rel="noopener">hackerrank</a>  学习和提高编码能力的网站</li>
<li><a href="https://codesandbox.io/" target="_blank" rel="noopener">codesandbox</a>  在线代码编辑器,可以快速编辑vue react 等一些示例代码,也支持下载 ( <a href="https://codesandbox.io/s/vue-template-4hxce" target="_blank" rel="noopener">https://codesandbox.io/s/vue-template-4hxce</a> )</li>
<li><a href="https://www.nowcoder.com/" target="_blank" rel="noopener">牛客网</a>  刷题获取面试笔记</li>
<li><a href="https://www.zhangxinxu.com/" target="_blank" rel="noopener">张鑫旭博客</a>  前端学习用</li>
<li><a href="https://edu.51cto.com/t/exam/list/id-103.html" target="_blank" rel="noopener">51CTO题库</a>  刷题专用</li>
</ol><a id="more"></a>


<p><a name="ead250fe"></a></p>
<h2 id="前端收藏库或文章"><a href="#前端收藏库或文章" class="headerlink" title="前端收藏库或文章"></a>前端收藏库或文章</h2><ol>
<li><a href="https://github.com/le5le-com/topology" target="_blank" rel="noopener">https://github.com/le5le-com/topology</a>     功能丰富的绘图工具（微服务架构图、拓扑图、流程图、类图等ULM图、脑图，动画、视频支持）</li>
<li><a href="https://www.jianshu.com/p/59dd28f0b9c9" target="_blank" rel="noopener">vue使用第三方icon</a></li>
<li><a href="https://www.jianshu.com/p/7bcf4ad609cf" target="_blank" rel="noopener">markdown中使用特殊的符号</a></li>
</ol>
<p><a name="f381d635"></a></p>
<h2 id="后台收藏库或文章"><a href="#后台收藏库或文章" class="headerlink" title="后台收藏库或文章"></a>后台收藏库或文章</h2><ol>
<li><a href="https://github.com/OlafenwaMoses/ImageAI" target="_blank" rel="noopener">python可以直接使用的AI识别模型</a></li>
</ol>
<p><a name="69507d65"></a></p>
<h2 id="收藏的库"><a href="#收藏的库" class="headerlink" title="收藏的库"></a>收藏的库</h2><ol>
<li><a href="https://github.com/hitherejoe/animate" target="_blank" rel="noopener">animate css3动画效果</a></li>
<li><a href="https://www.swiper.com.cn/" target="_blank" rel="noopener">swipe 移动端网站触摸滑动效果</a></li>
</ol>
<br>

<p><a name="efvqr"></a></p>
<h3 id="面试相关"><a href="#面试相关" class="headerlink" title="面试相关"></a>面试相关</h3><ol>
<li><a href="https://juejin.im/post/6844903747718479886" target="_blank" rel="noopener">面试文章收集</a></li>
<li><a href="https://github.com/yangshun/front-end-interview-handbook/tree/master/contents/zh" target="_blank" rel="noopener">前端面试手册</a></li>
</ol>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>收藏</tag>
      </tags>
  </entry>
  <entry>
    <title>云服务器samba设置</title>
    <url>/htwm_open_sesame/2020/10/13/yuque/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8samba%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>由于安全问题,云服务器运营商会默认限制部分端口的访问,如samba使用的445端口,则导致默认设置的samba无法访问,自己解决方案如下<br></p><ol>
<li><p>linux samba 修改监听端口```bash</p>
<h1 id="直接在samba-配置文件中添加以下语句"><a href="#直接在samba-配置文件中添加以下语句" class="headerlink" title="直接在samba 配置文件中添加以下语句"></a>直接在samba 配置文件中添加以下语句</h1><p>smb ports = 4455</p>
<h1 id="重启smb服务-则samba监听端口修改为4455"><a href="#重启smb服务-则samba监听端口修改为4455" class="headerlink" title="重启smb服务 则samba监听端口修改为4455"></a>重启smb服务 则samba监听端口修改为4455</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">2. windows设置端口转发&lt;br /&gt;原文来自于 [https://www.zhihu.com/question/59814912](https://www.zhihu.com/question/59814912)```bash</span><br><span class="line"># 1. 添加端口转发,添加端口转发之后 实际上访问 \\127.0.0.1 就是在访问设置ip的samba</span><br><span class="line">netsh interface portproxy add v4tov4 listenport=445 listenaddress=127.0.0.1 connectport=4455 connectaddress=xx.xx.xx.xxx</span><br><span class="line"></span><br><span class="line"># 2. 其他命令</span><br><span class="line"># 查看全部端口转发</span><br><span class="line">netsh interface portproxy show all</span><br><span class="line"># 删除端口转发</span><br><span class="line">netsh interface portproxy delete v4tov4 listenport=445 listenaddress=127.0.0.1</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过资源管理器访问 \127.0.0.1 实际上就是在访问监听端口的samba</p>
</li>
</ol><a id="more"></a>

<p><br>ps: 亲测有效(2019/12/22)</p>
]]></content>
      <categories>
        <category>运维管理</category>
      </categories>
      <tags>
        <tag>samba</tag>
      </tags>
  </entry>
  <entry>
    <title>如何处理json文件结尾的逗号</title>
    <url>/htwm_open_sesame/2020/10/13/yuque/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86json%E6%96%87%E4%BB%B6%E7%BB%93%E5%B0%BE%E7%9A%84%E9%80%97%E5%8F%B7/</url>
    <content><![CDATA[<p><a name="f6d01664"></a></p><h1 id="python如何处理json文件结尾多余的逗号"><a href="#python如何处理json文件结尾多余的逗号" class="headerlink" title="python如何处理json文件结尾多余的逗号"></a>python如何处理json文件结尾多余的逗号</h1><p><br>问题描述, json文件结尾是不允许使用逗号的<br><br>正确格式如下:<br></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</span><br><span class="line">    <span class="attr">"key2"</span>: <span class="string">"value2"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br>但如果使用json作为配置文件时,人为输入可能如下<br></p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</span><br><span class="line">    <span class="attr">"key2"</span>: <span class="string">"value2"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>






<p><br>在使用上述格式的文件时, json.loads文件会报错<br>参考来源 <a href="https://stackoverflow.com/questions/23705304/can-json-loads-ignore-trailing-commas" target="_blank" rel="noopener">https://stackoverflow.com/questions/23705304/can-json-loads-ignore-trailing-commas</a><br></p>
<p><a name="2eed9a76"></a></p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p><br>使用 jsoncomment 包进行解析<br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> jsoncomment <span class="keyword">import</span> JsonComment</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(filename) <span class="keyword">as</span> data_file:    </span><br><span class="line">    parser = JsonComment(json)</span><br><span class="line">    data = parser.load(data_file)</span><br></pre></td></tr></table></figure>

<p><br>缺陷 会从字符串中删除逗号 例如<br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> jsoncomment <span class="keyword">import</span> JsonComment</span><br><span class="line">string = <span class="string">'&#123;"key1": "&#123;my special value,&#125;"&#125;'</span></span><br><span class="line">parser = JsonComment()</span><br><span class="line">json_boj = parser.loads(string)</span><br><span class="line">print(json_boj)</span><br><span class="line"><span class="comment"># &#123;'key1': '&#123;my special value&#125;'&#125;</span></span><br><span class="line"><span class="comment"># 原本值中的字符串逗号也被删除了</span></span><br></pre></td></tr></table></figure>

<p><br>局限: 原本值中的字符串逗号也被删除了<br></p>
<p><a name="f3deb6e7"></a></p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p><br>先通过python 将字符串进行eval,同时 替换null, true false例如<br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ast, json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">clean_json</span><span class="params">(str)</span>:</span></span><br><span class="line">  str = str.replace(<span class="string">'null'</span>, <span class="string">'None'</span>).replace(<span class="string">'true'</span>, <span class="string">'True'</span>).replace(<span class="string">'false'</span>, <span class="string">'False'</span>)</span><br><span class="line">  <span class="keyword">return</span> json.dumps(ast.literal_eval(str))</span><br></pre></td></tr></table></figure>

<p><br>局限:<br></p>
<ol>
<li>会破坏原本字符串中包含 null, true, false</li>
<li>即算使用 ast.literal_eval 也需要考虑一些安全性的问题</li>
</ol>
<p><a name="54bbba80"></a></p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul>
<li>json最好写对 <img src="https://gw.alipayobjects.com/os/lib/twemoji/11.2.0/2/svg/1f602.svg#align=left&display=inline&height=18&margin=%5Bobject%20Object%5D&originHeight=150&originWidth=150&status=done&style=none&width=18" alt>, 如果作为需要手动添加内容的配置文件,最好还是改格式把</li>
</ul>
]]></content>
      <categories>
        <category>后端开发</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>yaml文件格式及python解析</title>
    <url>/htwm_open_sesame/2020/10/13/yuque/yaml%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%8F%8Apython%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p><a name="883b9673"></a></p><h2 id="用途及基本规则"><a href="#用途及基本规则" class="headerlink" title="用途及基本规则"></a>用途及基本规则</h2><ul>
<li>常用于配置文件</li>
<li>大小写敏感</li>
<li>使用缩进表示嵌套</li>
<li>使用空格表示缩进,不允许使用   键作为缩进</li>
<li>缩进的空格数目没有实际意义,左侧对其即为同级<br><a name="9b6ac63f"></a><h2 id="Python解析"><a href="#Python解析" class="headerlink" title="Python解析"></a>Python解析</h2></li>
</ul><ul>
<li>涉及到的包 pip install PyYAML</li>
<li>示例代码</li>
</ul><p><br>yaml文件<br></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.yaml</span></span><br><span class="line"><span class="attr">age:</span> <span class="number">37</span></span><br><span class="line"><span class="attr">spouse:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">Jane</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">25</span></span><br><span class="line"><span class="attr">children:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">Jimmy</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">    age:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">  - name1:</span> <span class="string">Jenny</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">    age1:</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><a id="more"></a>





<p><br>python 解析示例<br></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'test.yaml'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)<span class="keyword">as</span> fr:</span><br><span class="line">        data = yaml.load(fr, Loader=yaml.Loader)</span><br><span class="line">    print(data)</span><br><span class="line"><span class="comment"># &#123;'age': 37, 'spouse': &#123;'name': 'Jane Smith', 'age': 25&#125;, 'children': [&#123;'name': 'Jimmy Smith', 'age': 15&#125;, &#123;'name1': 'Jenny Smith', 'age1': 12&#125;]&#125;</span></span><br></pre></td></tr></table></figure>


<p><a name="c5350820"></a></p>
<h2 id="yaml语法"><a href="#yaml语法" class="headerlink" title="yaml语法"></a>yaml语法</h2><ul>
<li>参考 <a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener">YAML语言教程 阮一峰</a></li>
</ul>
]]></content>
      <categories>
        <category>后端开发</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>yaml</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 模板</title>
    <url>/htwm_open_sesame/2020/10/13/yuque/hexo%20%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<p><a name="DbQGp"></a></p>
<h1 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h1>]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>模板</tag>
      </tags>
  </entry>
  <entry>
    <title>导出语雀文档</title>
    <url>/htwm_open_sesame/2020/09/25/yuque/%E5%AF%BC%E5%87%BA%E8%AF%AD%E9%9B%80%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>参考链接<br /><a href="https://github.com/x-cold/yuque-hexo" target="_blank" rel="noopener">https://github.com/x-cold/yuque-hexo</a><br /></p>
<ol>
<li><p>下载yuque-hexo工具</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i -g yuque-hexo</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置package.json 示例如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="string">"yuqueConfig"</span>: &#123;</span><br><span class="line">    <span class="string">"postPath"</span>: <span class="string">"yuque"</span>,  <span class="comment"># 下载下来的文件目标路径</span></span><br><span class="line">    <span class="string">"cachePath"</span>: <span class="string">"yuque.json"</span>, <span class="comment"># 下载过程中缓存文件</span></span><br><span class="line">    <span class="string">"mdNameFormat"</span>: <span class="string">"title"</span>,</span><br><span class="line">    <span class="string">"adapter"</span>: <span class="string">"hexo"</span>,</span><br><span class="line">    <span class="string">"concurrency"</span>: 5,</span><br><span class="line">    <span class="string">"baseUrl"</span>: <span class="string">"https://www.yuque.com/api/v2"</span>,  <span class="comment">#</span></span><br><span class="line">    <span class="string">"login"</span>: <span class="string">"paradox-6sj6t"</span>,  <span class="comment"># 登录名称</span></span><br><span class="line">    <span class="string">"repo"</span>: <span class="string">"htwm623"</span>,  <span class="comment"># 语雀仓库短名称</span></span><br><span class="line">    <span class="string">"onlyPublished"</span>: <span class="literal">true</span>, <span class="comment"># 只展示已经发布的文章</span></span><br><span class="line">    <span class="string">"token"</span>: <span class="string">"xxxxxxxxxxxxxxxx"</span>  <span class="comment"># token</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yuque-hexo sync</span><br></pre></td></tr></table></figure>
<p>即可将文件库下载至本地<br /></p>
</li>
</ol>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>语雀</tag>
      </tags>
  </entry>
  <entry>
    <title>直接部署文件夹至gh-pages</title>
    <url>/htwm_open_sesame/2020/09/24/yuque/%E7%9B%B4%E6%8E%A5%E9%83%A8%E7%BD%B2%E6%96%87%E4%BB%B6%E5%A4%B9%E8%87%B3gh-pages/</url>
    <content><![CDATA[<p><a href="https://www.npmjs.com/package/gh-pages" target="_blank" rel="noopener">https://www.npmjs.com/package/gh-pages</a><br /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install gh-pages@3.0.0 --save-dev</span><br></pre></td></tr></table></figure>

<p><br />3.1版本会有bug, 所以指定版本安装<br /><br>部署只当文件夹<br /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gh-pages -d [dist]</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>gh-pages</tag>
      </tags>
  </entry>
  <entry>
    <title>Maridb安装及远程连接</title>
    <url>/htwm_open_sesame/2020/07/14/yuque/Maridb%E5%AE%89%E8%A3%85%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<p><a name="kVOpm"></a></p>
<h3 id="1-安装数据库"><a href="#1-安装数据库" class="headerlink" title="1. 安装数据库"></a>1. 安装数据库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install mariadb-server</span><br></pre></td></tr></table></figure>


<p><a name="5hPUr"></a></p>
<h3 id="2-配置数据库"><a href="#2-配置数据库" class="headerlink" title="2. 配置数据库"></a>2. 配置数据库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>
<p>按照需求选择设置即可<br /></p>
<p><a name="Y5pmA"></a></p>
<h3 id="3-配置远程连接"><a href="#3-配置远程连接" class="headerlink" title="3. 配置远程连接"></a>3. 配置远程连接</h3><p><a href="https://blog.csdn.net/lanuage/article/details/78846766" target="_blank" rel="noopener">参考文章</a></p>
<ol>
<li><p>在文件 /etc/mysql/mariadb.conf.d/50-server.cnf，注释掉bind-address</p>
</li>
<li><p>进入数据库中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mysql</span><br></pre></td></tr></table></figure>
</li>
<li><p>设置账户和远程连接的权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'%'</span> IDENTIFIED BY <span class="string">'password'</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'root'</span>@<span class="string">'192.168.100.%'</span> IDENTIFIED BY <span class="string">'my-new-password'</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>
<p>设置指定ip时只能由该ip连接<br /></p>
</li>
</ol>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Maridb</tag>
      </tags>
  </entry>
  <entry>
    <title>10_datas_of_js</title>
    <url>/htwm_open_sesame/2020/04/02/10_datas_of_js/</url>
    <content><![CDATA[<h1 id="hackrank-10-days-of-js"><a href="#hackrank-10-days-of-js" class="headerlink" title="hackrank 10 days of js"></a>hackrank 10 days of js</h1><h2 id="day-7-Regular-Expressions-I"><a href="#day-7-Regular-Expressions-I" class="headerlink" title="day 7 Regular Expressions I"></a>day 7 Regular Expressions I</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Objective</span><br><span class="line"></span><br><span class="line">In this challenge, we use a Regular Expression to evaluate a string. Check out the attached tutorial for more details.</span><br><span class="line"></span><br><span class="line">Task</span><br><span class="line"></span><br><span class="line">Complete the function in the editor below by returning a RegExp object, , that matches any string  that begins and ends with the same vowel. Recall that the English vowels are a, e, i, o, and u.</span><br><span class="line"></span><br><span class="line">Constraints</span><br><span class="line"></span><br><span class="line">The length of string  is  .</span><br><span class="line">String  consists of lowercase letters only (i.e., [a-z]).</span><br><span class="line">Output Format</span><br><span class="line"></span><br><span class="line">The function must return a RegExp object that matches any string  beginning with and ending in the same vowel.</span><br><span class="line"></span><br><span class="line">Sample Input 0</span><br><span class="line"></span><br><span class="line">bcd</span><br><span class="line">Sample Output 0</span><br><span class="line"></span><br><span class="line">false</span><br><span class="line">Explanation 0</span><br><span class="line"></span><br><span class="line">This string starts with (and ends in) a consonant, so it cannot start and end with the same vowel.</span><br><span class="line"></span><br><span class="line">Sample Input 1</span><br><span class="line"></span><br><span class="line">abcd</span><br><span class="line">Sample Output 1</span><br><span class="line"></span><br><span class="line">false</span><br><span class="line">Explanation 1</span><br><span class="line"></span><br><span class="line">This string ends in a consonant, so it cannot start and end with the same vowel.</span><br><span class="line"></span><br><span class="line">Sample Input 2</span><br><span class="line"></span><br><span class="line">abcda</span><br><span class="line">Sample Output 2</span><br><span class="line"></span><br><span class="line">true</span><br><span class="line">Explanation 2</span><br><span class="line"></span><br><span class="line">This string starts and ends with the same vowel (a).</span><br><span class="line"></span><br><span class="line">Sample Input 3</span><br><span class="line"></span><br><span class="line">abcdo</span><br><span class="line">Sample Output 3</span><br><span class="line"></span><br><span class="line">false</span><br><span class="line">Explanation 3</span><br><span class="line"></span><br><span class="line">This string starts with the vowel a but ends in the vowel o.</span><br></pre></td></tr></table></figure><a id="more"></a>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line">process.stdin.resume();</span><br><span class="line">process.stdin.setEncoding(<span class="string">'utf-8'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> inputString = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">let</span> currentLine = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">process.stdin.on(<span class="string">'data'</span>, inputStdin =&gt; &#123;</span><br><span class="line">    inputString += inputStdin;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">process.stdin.on(<span class="string">'end'</span>, _ =&gt; &#123;</span><br><span class="line">    inputString = inputString.trim().split(<span class="string">'\n'</span>).map(<span class="function"><span class="params">string</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> string.trim();</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    main();    </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readLine</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> inputString[currentLine++];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">regexVar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Declare a RegExp object variable named 're'</span></span><br><span class="line"><span class="comment">     * It must match a string that starts and ends with the same vowel (i.e., &#123;a, e, i, o, u&#125;)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Do not remove the return statement</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">let</span> re = <span class="regexp">/^(a|e|i|o|u).*\1$/</span></span><br><span class="line">    <span class="keyword">return</span> re;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="Day-7-Regular-Expressions-II"><a href="#Day-7-Regular-Expressions-II" class="headerlink" title="Day 7: Regular Expressions II"></a>Day 7: Regular Expressions II</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Task</span><br><span class="line"></span><br><span class="line">Complete the function in the editor below by returning a RegExp object, , that matches any string  satisfying both of the following conditions:</span><br><span class="line"></span><br><span class="line">String  starts with the prefix Mr., Mrs., Ms., Dr., or Er.</span><br><span class="line">The remainder of string  (i.e., the rest of the string after the prefix) consists of one or more upper and/or lowercase English alphabetic letters (i.e., [a-z] and [A-Z]).</span><br><span class="line">Constraints</span><br><span class="line"></span><br><span class="line">The length of string  is  .</span><br><span class="line">Output Format</span><br><span class="line"></span><br><span class="line">The function must return a RegExp object that matches any string  satisfying both of the given conditions.</span><br><span class="line"></span><br><span class="line">Sample Input 0</span><br><span class="line"></span><br><span class="line">Mr.X</span><br><span class="line">Sample Output 0</span><br><span class="line"></span><br><span class="line">true</span><br><span class="line">Explanation 0</span><br><span class="line"></span><br><span class="line">This string starts with Mr., followed by an English alphabetic letter (X).</span><br><span class="line"></span><br><span class="line">Sample Input 1</span><br><span class="line"></span><br><span class="line">Mrs.Y</span><br><span class="line">Sample Output 1</span><br><span class="line"></span><br><span class="line">true</span><br><span class="line">Explanation 1</span><br><span class="line"></span><br><span class="line">This string starts with Mrs., followed by an English alphabetic letter (Y).</span><br><span class="line"></span><br><span class="line">Sample Input 2</span><br><span class="line"></span><br><span class="line">Dr#Joseph</span><br><span class="line">Sample Output 2</span><br><span class="line"></span><br><span class="line">false</span><br><span class="line">Explanation 2</span><br><span class="line"></span><br><span class="line">This string starts with Dr# instead of Dr., so it&apos;s invalid.</span><br><span class="line"></span><br><span class="line">Sample Input 3</span><br><span class="line"></span><br><span class="line">Er .Abc</span><br><span class="line">Sample Output 3</span><br><span class="line"></span><br><span class="line">false</span><br><span class="line">Explanation 3</span><br><span class="line"></span><br><span class="line">This string starts with Er but there is a space before the period (.), making the string invalid.</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line">process.stdin.resume();</span><br><span class="line">process.stdin.setEncoding(<span class="string">'utf-8'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> inputString = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">let</span> currentLine = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">process.stdin.on(<span class="string">'data'</span>, inputStdin =&gt; &#123;</span><br><span class="line">    inputString += inputStdin;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">process.stdin.on(<span class="string">'end'</span>, _ =&gt; &#123;</span><br><span class="line">    inputString = inputString.trim().split(<span class="string">'\n'</span>).map(<span class="function"><span class="params">string</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> string.trim();</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    main();    </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readLine</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> inputString[currentLine++];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">regexVar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Declare a RegExp object variable named 're'</span></span><br><span class="line"><span class="comment">     * It must match a string that starts with 'Mr.', 'Mrs.', 'Ms.', 'Dr.', or 'Er.', </span></span><br><span class="line"><span class="comment">     * followed by one or more letters.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Do not remove the return statement</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">return</span> re;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> re = regexVar();</span><br><span class="line">    <span class="keyword">const</span> s = readLine();</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">console</span>.log(!!s.match(re));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h2 id="Day-7-Regular-Expressions-III"><a href="#Day-7-Regular-Expressions-III" class="headerlink" title="Day 7: Regular Expressions III"></a>Day 7: Regular Expressions III</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Task</span><br><span class="line"></span><br><span class="line">Complete the function in the editor below by returning a RegExp object, , that matches every integer in some string .</span><br><span class="line"></span><br><span class="line">Constraints</span><br><span class="line"></span><br><span class="line">The length of string  is  .</span><br><span class="line">It&apos;s guaranteed that string  contains at least one integer.</span><br><span class="line">Output Format</span><br><span class="line"></span><br><span class="line">The function must return a RegExp object that matches every integer in some string .</span><br><span class="line"></span><br><span class="line">Sample Input 0</span><br><span class="line"></span><br><span class="line">102, 1948948 and 1.3 and 4.5</span><br><span class="line">Sample Output 0</span><br><span class="line"></span><br><span class="line">102</span><br><span class="line">1948948</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">Explanation 0</span><br><span class="line"></span><br><span class="line">When we call match on string  and pass the correct RegExp as our argument, it returns the following array of results: [ &apos;102&apos;, &apos;1948948&apos;, &apos;1&apos;, &apos;3&apos;, &apos;4&apos;, &apos;5&apos; ].</span><br><span class="line"></span><br><span class="line">Sample Input 1</span><br><span class="line"></span><br><span class="line">1 2 3</span><br><span class="line">Sample Output 1</span><br><span class="line"></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">Explanation 1</span><br><span class="line"></span><br><span class="line">When we call match on string  and pass the correct RegExp as our argument, it returns the following array of results: [ &apos;1&apos;, &apos;2&apos;, &apos;3&apos; ].</span><br></pre></td></tr></table></figure>





<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">use strict<span class="string">';</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">process.stdin.resume();</span></span><br><span class="line"><span class="string">process.stdin.setEncoding('</span>utf<span class="number">-8</span><span class="string">');</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">let inputString = '</span><span class="string">';</span></span><br><span class="line"><span class="string">let currentLine = 0;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">process.stdin.on('</span>data<span class="string">', inputStdin =&gt; &#123;</span></span><br><span class="line"><span class="string">    inputString += inputStdin;</span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">process.stdin.on('</span>end<span class="string">', _ =&gt; &#123;</span></span><br><span class="line"><span class="string">    inputString = inputString.trim().split('</span>\n<span class="string">').map(string =&gt; &#123;</span></span><br><span class="line"><span class="string">        return string.trim();</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    main();    </span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function readLine() &#123;</span></span><br><span class="line"><span class="string">    return inputString[currentLine++];</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function regexVar() &#123;</span></span><br><span class="line"><span class="string">    /*</span></span><br><span class="line"><span class="string">     * Declare a RegExp object variable named '</span>re<span class="string">'</span></span><br><span class="line"><span class="string">     * It must match ALL occurrences of numbers in a string.</span></span><br><span class="line"><span class="string">     */</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    /*</span></span><br><span class="line"><span class="string">     * Do not remove the return statement</span></span><br><span class="line"><span class="string">     */</span></span><br><span class="line"><span class="string">    return re;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>Python 收藏文章</title>
    <url>/htwm_open_sesame/2020/03/23/yuque/Python%20%E6%94%B6%E8%97%8F%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<p>django文章收藏</p>
<ul>
<li><a href="https://blog.csdn.net/Dopamy_BusyMonkey/article/details/70620676" target="_blank" rel="noopener">djanjo登陆和session过期跳转</a></li>
<li><br />




</li>
</ul>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>收藏</tag>
      </tags>
  </entry>
  <entry>
    <title>freecodecampe出题</title>
    <url>/htwm_open_sesame/2020/03/18/freecodecampe%E5%87%BA%E9%A2%98/</url>
    <content><![CDATA[<h1 id="freecodecamp-advanced-algorithm-scripting"><a href="#freecodecamp-advanced-algorithm-scripting" class="headerlink" title="freecodecamp advanced algorithm scripting"></a>freecodecamp advanced algorithm scripting</h1><h2 id="1-Validate-US-Telephtone-Numbers"><a href="#1-Validate-US-Telephtone-Numbers" class="headerlink" title="1.  Validate US Telephtone Numbers"></a>1.  Validate US Telephtone Numbers</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">telephoneCheck</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 祝你好运</span></span><br><span class="line">  <span class="keyword">var</span> regex = <span class="regexp">/^(1\s?)?(\(\d&#123;3&#125;\)|\d&#123;3&#125;)[\s\-]?\d&#123;3&#125;[\s\-]?\d&#123;4&#125;$/</span></span><br><span class="line">  <span class="keyword">return</span> regex.test(str)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">telephoneCheck(<span class="string">"555-555-5555"</span>);</span><br></pre></td></tr></table></figure><a id="more"></a>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">如果传入字符串是一个有效的美国电话号码，则返回 true.</span><br><span class="line"></span><br><span class="line">用户可以在表单中填入一个任意有效美国电话号码. 下面是一些有效号码的例子(还有下面测试时用到的一些变体写法):</span><br><span class="line"></span><br><span class="line">555-555-5555</span><br><span class="line">(555)555-5555</span><br><span class="line">(555) 555-5555</span><br><span class="line">555 555 5555</span><br><span class="line">5555555555</span><br><span class="line">1 555 555 5555</span><br><span class="line">在本节中你会看见如 800-692-7753 or 8oo-six427676;laskdjf这样的字符串. 你的任务就是验证前面给出的字符串是否是有效的美国电话号码. 区号是必须有的. 如果字符串中给出了国家代码, 你必须验证其是 1. 如果号码有效就返回 true ; 否则返回 false.</span><br><span class="line"></span><br><span class="line">telephoneCheck(&quot;555-555-5555&quot;) 应该返回一个布尔值.</span><br><span class="line">telephoneCheck(&quot;1 555-555-5555&quot;) 应该返回 true.</span><br><span class="line">telephoneCheck(&quot;1 (555) 555-5555&quot;) 应该返回 true.</span><br><span class="line">telephoneCheck(&quot;5555555555&quot;) 应该返回 true.</span><br><span class="line">telephoneCheck(&quot;555-555-5555&quot;) 应该返回 true.</span><br><span class="line">telephoneCheck(&quot;(555)555-5555&quot;) 应该返回 true.</span><br><span class="line">telephoneCheck(&quot;1(555)555-5555&quot;) 应该返回 true.</span><br><span class="line">telephoneCheck(&quot;1 555)555-5555&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;1 555 555 5555&quot;) 应该返回 true.</span><br><span class="line">telephoneCheck(&quot;1 456 789 4444&quot;) 应该返回 true.</span><br><span class="line">telephoneCheck(&quot;123**&amp;!!asdf#&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;55555555&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;(6505552368)&quot;) 应该返回 false</span><br><span class="line">telephoneCheck(&quot;2 (757) 622-7382&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;0 (757) 622-7382&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;-1 (757) 622-7382&quot;) 应该返回 false</span><br><span class="line">telephoneCheck(&quot;2 757 622-7382&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;10 (757) 622-7382&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;27576227382&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;(275)76227382&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;2(757)6227382&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;2(757)622-7382&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;555)-555-5555&quot;) 应该返回 false.</span><br><span class="line">telephoneCheck(&quot;(555-555-5555&quot;) 应该返回 false.</span><br></pre></td></tr></table></figure>





<h2 id="2-Symmetruc-Dufference"><a href="#2-Symmetruc-Dufference" class="headerlink" title="2. Symmetruc Dufference"></a>2. Symmetruc Dufference</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sym</span>(<span class="params">args</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> args;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sym([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>]);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">创建一个函数，接受两个或多个数组，返回所给数组的 对等差分(symmetric difference) (△ or ⊕)数组.</span><br><span class="line"></span><br><span class="line">给出两个集合 (如集合 A = &#123;1, 2, 3&#125; 和集合 B = &#123;2, 3, 4&#125;), 而数学术语 &quot;对等差分&quot; 的集合就是指由所有只在两个集合其中之一的元素组成的集合(A △ B = C = &#123;1, 4&#125;). 对于传入的额外集合 (如 D = &#123;2, 3&#125;), 你应该安装前面原则求前两个集合的结果与新集合的对等差分集合 (C △ D = &#123;1, 4&#125; △ &#123;2, 3&#125; = &#123;1, 2, 3, 4&#125;).</span><br><span class="line"></span><br><span class="line">当你遇到困难的时候，记得查看错误提示、阅读文档、搜索、提问。</span><br><span class="line"></span><br><span class="line">这是一些对你有帮助的资源:</span><br><span class="line"></span><br><span class="line">Array.reduce()</span><br><span class="line">Symmetric Difference</span><br><span class="line"></span><br><span class="line">sym([1, 2, 3], [5, 2, 1, 4]) 应该返回 [3, 4, 5].</span><br><span class="line">sym([1, 2, 3], [5, 2, 1, 4]) 应该只包含三个元素.</span><br><span class="line">sym([1, 2, 5], [2, 3, 5], [3, 4, 5]) 应该返回 [1, 4, 5]</span><br><span class="line">sym([1, 2, 5], [2, 3, 5], [3, 4, 5]) 应该只包含三个元素.</span><br><span class="line">sym([1, 1, 2, 5], [2, 2, 3, 5], [3, 4, 5, 5]) 应该返回 [1, 4, 5].</span><br><span class="line">sym([1, 1, 2, 5], [2, 2, 3, 5], [3, 4, 5, 5]) 应该只包含三个元素.</span><br><span class="line">sym([3, 3, 3, 2, 5], [2, 1, 5, 7], [3, 4, 6, 6], [1, 2, 3]) 应该返回 [2, 3, 4, 6, 7].</span><br><span class="line">sym([3, 3, 3, 2, 5], [2, 1, 5, 7], [3, 4, 6, 6], [1, 2, 3]) 应该只包含五个元素.</span><br><span class="line">sym([3, 3, 3, 2, 5], [2, 1, 5, 7], [3, 4, 6, 6], [1, 2, 3], [5, 3, 9, 8], [1]) 应该返回 [1, 2, 4, 5, 6, 7, 8, 9].</span><br><span class="line">sym([3, 3, 3, 2, 5], [2, 1, 5, 7], [3, 4, 6, 6], [1, 2, 3], [5, 3, 9, 8], [1]) 应该只包含八个元素.</span><br></pre></td></tr></table></figure>





<h2 id="3-Exact-Cgabge"><a href="#3-Exact-Cgabge" class="headerlink" title="3. Exact Cgabge"></a>3. Exact Cgabge</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCashRegister</span>(<span class="params">price, cash, cid</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> change;</span><br><span class="line">  <span class="keyword">return</span> change;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Example cash-in-drawer array:</span></span><br><span class="line"><span class="comment">// [["PENNY", 1.01],</span></span><br><span class="line"><span class="comment">// ["NICKEL", 2.05],</span></span><br><span class="line"><span class="comment">// ["DIME", 3.10],</span></span><br><span class="line"><span class="comment">// ["QUARTER", 4.25],</span></span><br><span class="line"><span class="comment">// ["ONE", 90.00],</span></span><br><span class="line"><span class="comment">// ["FIVE", 55.00],</span></span><br><span class="line"><span class="comment">// ["TEN", 20.00],</span></span><br><span class="line"><span class="comment">// ["TWENTY", 60.00],</span></span><br><span class="line"><span class="comment">// ["ONE HUNDRED", 100.00]]</span></span><br><span class="line"></span><br><span class="line">checkCashRegister(<span class="number">19.50</span>, <span class="number">20.00</span>, [[<span class="string">"PENNY"</span>, <span class="number">1.01</span>], [<span class="string">"NICKEL"</span>, <span class="number">2.05</span>], [<span class="string">"DIME"</span>, <span class="number">3.10</span>], [<span class="string">"QUARTER"</span>, <span class="number">4.25</span>], [<span class="string">"ONE"</span>, <span class="number">90.00</span>], [<span class="string">"FIVE"</span>, <span class="number">55.00</span>], [<span class="string">"TEN"</span>, <span class="number">20.00</span>], [<span class="string">"TWENTY"</span>, <span class="number">60.00</span>], [<span class="string">"ONE HUNDRED"</span>, <span class="number">100.00</span>]]);</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">设计一个收银程序 checkCashRegister() ，其把购买价格(price)作为第一个参数 , 付款金额 (cash)作为第二个参数, 和收银机中零钱 (cid) 作为第三个参数.</span><br><span class="line"></span><br><span class="line">cid 是一个二维数组，存着当前可用的找零.</span><br><span class="line"></span><br><span class="line">当收银机中的钱不够找零时返回字符串 &quot;Insufficient Funds&quot;. 如果正好则返回字符串 &quot;Closed&quot;.</span><br><span class="line"></span><br><span class="line">否则, 返回应找回的零钱列表,且由大到小存在二维数组中.</span><br><span class="line"></span><br><span class="line">当你遇到困难的时候，记得查看错误提示、阅读文档、搜索、提问。</span><br><span class="line"></span><br><span class="line">这是一些对你有帮助的资源:</span><br><span class="line"></span><br><span class="line">Global Object</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">checkCashRegister(19.50, 20.00, [[&quot;PENNY&quot;, 1.01], [&quot;NICKEL&quot;, 2.05], [&quot;DIME&quot;, 3.10], [&quot;QUARTER&quot;, 4.25], [&quot;ONE&quot;, 90.00], [&quot;FIVE&quot;, 55.00], [&quot;TEN&quot;, 20.00], [&quot;TWENTY&quot;, 60.00], [&quot;ONE HUNDRED&quot;, 100.00]]) 应该返回一个数组.</span><br><span class="line">checkCashRegister(19.50, 20.00, [[&quot;PENNY&quot;, 0.01], [&quot;NICKEL&quot;, 0], [&quot;DIME&quot;, 0], [&quot;QUARTER&quot;, 0], [&quot;ONE&quot;, 0], [&quot;FIVE&quot;, 0], [&quot;TEN&quot;, 0], [&quot;TWENTY&quot;, 0], [&quot;ONE HUNDRED&quot;, 0]]) 应该返回一个字符串.</span><br><span class="line">checkCashRegister(19.50, 20.00, [[&quot;PENNY&quot;, 0.50], [&quot;NICKEL&quot;, 0], [&quot;DIME&quot;, 0], [&quot;QUARTER&quot;, 0], [&quot;ONE&quot;, 0], [&quot;FIVE&quot;, 0], [&quot;TEN&quot;, 0], [&quot;TWENTY&quot;, 0], [&quot;ONE HUNDRED&quot;, 0]]) 应该返回一个字符串.</span><br><span class="line">checkCashRegister(19.50, 20.00, [[&quot;PENNY&quot;, 1.01], [&quot;NICKEL&quot;, 2.05], [&quot;DIME&quot;, 3.10], [&quot;QUARTER&quot;, 4.25], [&quot;ONE&quot;, 90.00], [&quot;FIVE&quot;, 55.00], [&quot;TEN&quot;, 20.00], [&quot;TWENTY&quot;, 60.00], [&quot;ONE HUNDRED&quot;, 100.00]]) 应该返回 [[&quot;QUARTER&quot;, 0.50]].</span><br><span class="line">checkCashRegister(3.26, 100.00, [[&quot;PENNY&quot;, 1.01], [&quot;NICKEL&quot;, 2.05], [&quot;DIME&quot;, 3.10], [&quot;QUARTER&quot;, 4.25], [&quot;ONE&quot;, 90.00], [&quot;FIVE&quot;, 55.00], [&quot;TEN&quot;, 20.00], [&quot;TWENTY&quot;, 60.00], [&quot;ONE HUNDRED&quot;, 100.00]]) 应该返回 [[&quot;TWENTY&quot;, 60.00], [&quot;TEN&quot;, 20.00], [&quot;FIVE&quot;, 15], [&quot;ONE&quot;, 1], [&quot;QUARTER&quot;, 0.50], [&quot;DIME&quot;, 0.20], [&quot;PENNY&quot;, 0.04]].</span><br><span class="line">checkCashRegister(19.50, 20.00, [[&quot;PENNY&quot;, 0.01], [&quot;NICKEL&quot;, 0], [&quot;DIME&quot;, 0], [&quot;QUARTER&quot;, 0], [&quot;ONE&quot;, 0], [&quot;FIVE&quot;, 0], [&quot;TEN&quot;, 0], [&quot;TWENTY&quot;, 0], [&quot;ONE HUNDRED&quot;, 0]]) 应该返回 &quot;Insufficient Funds&quot;.</span><br><span class="line">checkCashRegister(19.50, 20.00, [[&quot;PENNY&quot;, 0.01], [&quot;NICKEL&quot;, 0], [&quot;DIME&quot;, 0], [&quot;QUARTER&quot;, 0], [&quot;ONE&quot;, 1.00], [&quot;FIVE&quot;, 0], [&quot;TEN&quot;, 0], [&quot;TWENTY&quot;, 0], [&quot;ONE HUNDRED&quot;, 0]]) 应该返回 &quot;Insufficient Funds&quot;.</span><br><span class="line">checkCashRegister(19.50, 20.00, [[&quot;PENNY&quot;, 0.50], [&quot;NICKEL&quot;, 0], [&quot;DIME&quot;, 0], [&quot;QUARTER&quot;, 0], [&quot;ONE&quot;, 0], [&quot;FIVE&quot;, 0], [&quot;TEN&quot;, 0], [&quot;TWENTY&quot;, 0], [&quot;ONE HUNDRED&quot;, 0]]) 应该返回 &quot;Closed&quot;.</span><br></pre></td></tr></table></figure>





<h2 id="4-inventory-Update"><a href="#4-inventory-Update" class="headerlink" title="4.inventory Update"></a>4.inventory Update</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateInventory</span>(<span class="params">arr1, arr2</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 请保证你的代码考虑到所有情况</span></span><br><span class="line">    <span class="keyword">return</span> arr1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 仓库库存示例</span></span><br><span class="line"><span class="keyword">var</span> curInv = [</span><br><span class="line">    [<span class="number">21</span>, <span class="string">"Bowling Ball"</span>],</span><br><span class="line">    [<span class="number">2</span>, <span class="string">"Dirty Sock"</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="string">"Hair Pin"</span>],</span><br><span class="line">    [<span class="number">5</span>, <span class="string">"Microphone"</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newInv = [</span><br><span class="line">    [<span class="number">2</span>, <span class="string">"Hair Pin"</span>],</span><br><span class="line">    [<span class="number">3</span>, <span class="string">"Half-Eaten Apple"</span>],</span><br><span class="line">    [<span class="number">67</span>, <span class="string">"Bowling Ball"</span>],</span><br><span class="line">    [<span class="number">7</span>, <span class="string">"Toothpaste"</span>]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">updateInventory(curInv, newInv);</span><br></pre></td></tr></table></figure>





<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">依照一个存着新进货物的二维数组，更新存着现有库存(在 arr1 中)的二维数组. 如果货物已存在则更新数量 . 如果没有对应货物则把其加入到数组中，更新最新的数量. 返回当前的库存数组，且按货物名称的字母顺序排列.</span><br><span class="line"></span><br><span class="line">当你遇到困难的时候，记得查看错误提示、阅读文档、搜索、提问。</span><br><span class="line"></span><br><span class="line">这是一些对你有帮助的资源:</span><br><span class="line"></span><br><span class="line">Global Array Object&apos;</span><br><span class="line"></span><br><span class="line">updateInventory() 应该返回一个数组.</span><br><span class="line">updateInventory([[21, &quot;Bowling Ball&quot;], [2, &quot;Dirty Sock&quot;], [1, &quot;Hair Pin&quot;], [5, &quot;Microphone&quot;]], [[2, &quot;Hair Pin&quot;], [3, &quot;Half-Eaten Apple&quot;], [67, &quot;Bowling Ball&quot;], [7, &quot;Toothpaste&quot;]]).length 应该返回一个长度为6的数组.</span><br><span class="line">updateInventory([[21, &quot;Bowling Ball&quot;], [2, &quot;Dirty Sock&quot;], [1, &quot;Hair Pin&quot;], [5, &quot;Microphone&quot;]], [[2, &quot;Hair Pin&quot;], [3, &quot;Half-Eaten Apple&quot;], [67, &quot;Bowling Ball&quot;], [7, &quot;Toothpaste&quot;]]) 应该返回 [[88, &quot;Bowling Ball&quot;], [2, &quot;Dirty Sock&quot;], [3, &quot;Hair Pin&quot;], [3, &quot;Half-Eaten Apple&quot;], [5, &quot;Microphone&quot;], [7, &quot;Toothpaste&quot;]].</span><br><span class="line">updateInventory([[21, &quot;Bowling Ball&quot;], [2, &quot;Dirty Sock&quot;], [1, &quot;Hair Pin&quot;], [5, &quot;Microphone&quot;]], []) 应该返回 [[21, &quot;Bowling Ball&quot;], [2, &quot;Dirty Sock&quot;], [1, &quot;Hair Pin&quot;], [5, &quot;Microphone&quot;]].</span><br><span class="line">updateInventory([], [[2, &quot;Hair Pin&quot;], [3, &quot;Half-Eaten Apple&quot;], [67, &quot;Bowling Ball&quot;], [7, &quot;Toothpaste&quot;]]) 应该返回 [[67, &quot;Bowling Ball&quot;], [2, &quot;Hair Pin&quot;], [3, &quot;Half-Eaten Apple&quot;], [7, &quot;Toothpaste&quot;]].</span><br><span class="line">updateInventory([[0, &quot;Bowling Ball&quot;], [0, &quot;Dirty Sock&quot;], [0, &quot;Hair Pin&quot;], [0, &quot;Microphone&quot;]], [[1, &quot;Hair Pin&quot;], [1, &quot;Half-Eaten Apple&quot;], [1, &quot;Bowling Ball&quot;], [1, &quot;Toothpaste&quot;]]) 应该返回 [[1, &quot;Bowling Ball&quot;], [0, &quot;Dirty Sock&quot;], [1, &quot;Hair Pin&quot;], [1, &quot;Half-Eaten Apple&quot;], [0, &quot;Microphone&quot;], [1, &quot;Toothpaste&quot;]].</span><br></pre></td></tr></table></figure>





<h2 id="5-No-repeats-please"><a href="#5-No-repeats-please" class="headerlink" title="5. No repeats please"></a>5. No repeats please</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function permAlone(str) &#123;</span><br><span class="line">  return str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">permAlone(&apos;aab&apos;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">把一个字符串中的字符重新排列生成新的字符串，返回新生成的字符串里没有连续重复字符的字符串个数.连续重复只以单个字符为准</span><br><span class="line"></span><br><span class="line">例如, aab 应该返回 2 因为它总共有6中排列 (aab, aab, aba, aba, baa, baa), 但是只有两个 (aba and aba)没有连续重复的字符 (在本例中是 a).</span><br><span class="line"></span><br><span class="line">当你遇到困难的时候，记得查看错误提示、阅读文档、搜索、提问。</span><br><span class="line"></span><br><span class="line">这是一些对你有帮助的资源:</span><br><span class="line"></span><br><span class="line">Permutations</span><br><span class="line">RegExp</span><br><span class="line">/**</span><br><span class="line">  * Your output will go here.</span><br><span class="line">  * Any console.log() -type</span><br><span class="line">  * statements will appear in</span><br><span class="line">  * your browser&apos;s DevTools</span><br><span class="line">  * JavaScript console.</span><br><span class="line">  */</span><br><span class="line"></span><br><span class="line">permAlone(&quot;aab&quot;) 应该返回一个数字.</span><br><span class="line">permAlone(&quot;aab&quot;) 应该返回 2.</span><br><span class="line">permAlone(&quot;aaa&quot;) 应该返回 0.</span><br><span class="line">permAlone(&quot;aabb&quot;) 应该返回 8.</span><br><span class="line">permAlone(&quot;abcdefa&quot;) 应该返回 3600.</span><br><span class="line">permAlone(&quot;abfdefa&quot;) 应该返回 2640.</span><br><span class="line">permAlone(&quot;zzzzzzzz&quot;) 应该返回 0.</span><br></pre></td></tr></table></figure>





<h2 id="6-Friendly-Date-Ranges"><a href="#6-Friendly-Date-Ranges" class="headerlink" title="6. Friendly Date Ranges"></a>6. Friendly Date Ranges</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function makeFriendlyDates(arr) &#123;</span><br><span class="line">  return arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">makeFriendlyDates([&apos;2017-01-02&apos;, &apos;2017-01-05&apos;]);</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">makeFriendlyDates([&quot;2017-01-02&quot;, &quot;2017-01-05&quot;]) 应该返回 [&quot;January 2nd&quot;,&quot;5th&quot;].</span><br><span class="line">makeFriendlyDates([&quot;2017-02-01&quot;, &quot;2017-03-03&quot;]) 应该返回 [&quot;February 1st&quot;,&quot;March 3rd&quot;].</span><br><span class="line">makeFriendlyDates([&quot;2016-05-11&quot;, &quot;2017-04-04&quot;]) 应该返回 [&quot;May 11th, 2016&quot;,&quot;April 4th&quot;].</span><br><span class="line">makeFriendlyDates([&quot;2017-07-12&quot;, &quot;2018-06-13&quot;]) 应该返回 [&quot;July 12th&quot;,&quot;June 13th&quot;]</span><br><span class="line">makeFriendlyDates([&quot;2003-08-15&quot;, &quot;2009-09-21&quot;]) 应该返回 [&quot;August 15th, 2003&quot;, &quot;September 21st, 2009&quot;].</span><br><span class="line">makeFriendlyDates([&quot;2010-10-23&quot;, &quot;2011-10-22&quot;]) 应该返回 [&quot;October 23rd, 2010&quot;,&quot;October 22nd&quot;].</span><br><span class="line">makeFriendlyDates([&quot;2008-10-31&quot;, &quot;2009-10-31&quot;]) 应该返回 [&quot;October 31st, 2008&quot;,&quot;October 31st, 2009&quot;].</span><br><span class="line">makeFriendlyDates([&quot;2004-11-17&quot;, &quot;2005-12-25&quot;]) 应该返回 [&quot;November 17th, 2004&quot;,&quot;December 25th, 2005&quot;].</span><br><span class="line">makeFriendlyDates([&quot;2001-12-20&quot;, &quot;2001-12-20&quot;]) 应该返回 [&quot;December 20th, 2001&quot;].</span><br><span class="line">makeFriendlyDates([&quot;2002-12-20&quot;, &quot;2001-12-20&quot;]) 不应该返回数组</span><br></pre></td></tr></table></figure>



<h2 id="7-Make-a-Person"><a href="#7-Make-a-Person" class="headerlink" title="7. Make a Person"></a>7. Make a Person</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var Person = function(firstAndLast) &#123;</span><br><span class="line">    return firstAndLast;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var bob = new Person(&apos;Bob Ross&apos;);</span><br><span class="line">bob.getFullName();</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用下面给定的方法构造一个对象.</span><br><span class="line"></span><br><span class="line">方法有 getFirstName(), getLastName(), getFullName(), setFirstName(first), setLastName(last), and setFullName(firstAndLast).</span><br><span class="line"></span><br><span class="line">所有有参数的方法只接受一个字符串参数.</span><br><span class="line"></span><br><span class="line">所有的方法只与实体对象交互.</span><br><span class="line"></span><br><span class="line">当你遇到困难的时候，记得查看错误提示、阅读文档、搜索、提问。</span><br><span class="line"></span><br><span class="line">这是一些对你有帮助的资源:</span><br><span class="line"></span><br><span class="line">Closures</span><br><span class="line">Details of the Object Model</span><br></pre></td></tr></table></figure>





<h2 id="8-Map-the-Debris"><a href="#8-Map-the-Debris" class="headerlink" title="8. Map the Debris"></a>8. Map the Debris</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function orbitalPeriod(arr) &#123;</span><br><span class="line">  var GM = 398600.4418;</span><br><span class="line">  var earthRadius = 6367.4447;</span><br><span class="line">  return arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">orbitalPeriod([&#123;name : &quot;sputnik&quot;, avgAlt : 35873.5553&#125;]);</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">返回一个数组，其内容是把原数组中对应元素的平均海拔转换成其对应的轨道周期.</span><br><span class="line"></span><br><span class="line">原数组中会包含格式化的对象内容，像这样 &#123;name: &apos;name&apos;, avgAlt: avgAlt&#125;.</span><br><span class="line"></span><br><span class="line">至于轨道周期怎么求，戳这里 on wikipedia (不想看英文的话可以自行搜索以轨道高度计算轨道周期的公式).</span><br><span class="line"></span><br><span class="line">求得的值应该是一个与其最接近的整数，轨道是以地球为基准的.</span><br><span class="line"></span><br><span class="line">地球半径是 6367.4447 kilometers, 地球的GM值是 398600.4418, 圆周率为Math.PI</span><br><span class="line"></span><br><span class="line">当你遇到困难的时候，记得查看错误提示、阅读文档、搜索、提问。</span><br><span class="line"></span><br><span class="line">这是一些对你有帮助的资源:</span><br><span class="line"></span><br><span class="line">Math.pow()</span><br><span class="line">/**</span><br><span class="line">  * Your output will go here.</span><br><span class="line">  * Any console.log() -type</span><br><span class="line">  * statements will appear in</span><br><span class="line">  * your browser&apos;s DevTools</span><br><span class="line">  * JavaScript console.</span><br><span class="line">  */</span><br><span class="line"></span><br><span class="line">orbitalPeriod([&#123;name : &quot;sputnik&quot;, avgAlt : 35873.5553&#125;]) 应该返回 [&#123;name: &quot;sputnik&quot;, orbitalPeriod: 86400&#125;].</span><br><span class="line">orbitalPeriod([&#123;name: &quot;iss&quot;, avgAlt: 413.6&#125;, &#123;name: &quot;hubble&quot;, avgAlt: 556.7&#125;, &#123;name: &quot;moon&quot;, avgAlt: 378632.553&#125;]) 应该返回 [&#123;name : &quot;iss&quot;, orbitalPeriod: 5557&#125;, &#123;name: &quot;hubble&quot;, orbitalPeriod: 5734&#125;, &#123;name: &quot;moon&quot;, orbitalPeriod: 2377399&#125;].</span><br></pre></td></tr></table></figure>



<h2 id="Pairwise"><a href="#Pairwise" class="headerlink" title="Pairwise"></a>Pairwise</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function pairwise(arr, arg) &#123;</span><br><span class="line">  return arg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pairwise([1,4,2,3,0,5], 7);</span><br></pre></td></tr></table></figure>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">找到你的另一半</span><br><span class="line"></span><br><span class="line">都说优秀的程序员擅长面向对象编程，但却经常找不到另一半，这是为什么呢？因为你总是把自己局限成为一个程序员，没有打开自己的思维。</span><br><span class="line"></span><br><span class="line">这是一个社群的时代啊，在这里你应该找到与你有相同价值观但又互补的另一半。</span><br><span class="line"></span><br><span class="line">譬如：你编程能力强，估值11分，如果以20分为最佳情侣来计算，你应该找一个设计能力强，估值为9分的女生。</span><br><span class="line"></span><br><span class="line">那么当你遇到一个设计能力为9分的女生，千万别犹豫，大胆去表白。千万别以为后面的瓜比前面的甜哦。</span><br><span class="line"></span><br><span class="line">举个例子：有一个能力数组[7,9,11,13,15]，按照最佳组合值为20来计算，只有7+13和9+11两种组合。而7在数组的索引为0，13在数组的索引为3，9在数组的索引为1，11在数组的索引为2。</span><br><span class="line"></span><br><span class="line">所以我们说函数：pairwise([7,9,11,13,15],20) 的返回值应该是0+3+1+2的和，即6。</span><br><span class="line"></span><br><span class="line">我们可以通过表格来更直观地查看数组中索引和值的关系：</span><br><span class="line"></span><br><span class="line">Index	0	1	2	3	4</span><br><span class="line">Value	7	9	11	13	15</span><br><span class="line">任务：帮右边的pairwise函数实现上面的功能。</span><br><span class="line"></span><br><span class="line">当你遇到困难的时候，记得开大招&apos;Read-Search-Ask&apos;。</span><br><span class="line"></span><br><span class="line">这是一些对你有帮助的资源:</span><br><span class="line"></span><br><span class="line">Array.reduce()</span><br><span class="line">/**</span><br><span class="line">  * Your output will go here.</span><br><span class="line">  * Any console.log() -type</span><br><span class="line">  * statements will appear in</span><br><span class="line">  * your browser&apos;s DevTools</span><br><span class="line">  * JavaScript console.</span><br><span class="line">  */</span><br><span class="line"></span><br><span class="line">pairwise([1, 4, 2, 3, 0, 5], 7) 应该返回 11.</span><br><span class="line">pairwise([1, 3, 2, 4], 4) 应该返回 1.</span><br><span class="line">pairwise([1, 1, 1], 2) 应该返回 1.</span><br><span class="line">pairwise([0, 0, 0, 0, 1, 1], 1) 应该返回 10.</span><br><span class="line">pairwise([], 100) 应该返回 0.</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>个人习惯设置及软件快捷键</title>
    <url>/htwm_open_sesame/2020/03/14/yuque/%E4%B8%AA%E4%BA%BA%E4%B9%A0%E6%83%AF%E8%AE%BE%E7%BD%AE%E5%8F%8A%E8%BD%AF%E4%BB%B6%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<p><a name="f13a19ca"></a></p><h2 id="将Python脚本编译成二进制文件"><a href="#将Python脚本编译成二进制文件" class="headerlink" title="将Python脚本编译成二进制文件"></a>将Python脚本编译成二进制文件</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># bash</span></span><br><span class="line">$ python -m compile &lt;file&gt;</span><br><span class="line"><span class="comment"># 会在当前文件夹中生成__pycache__ 文件夹中生成对应的pyc文件</span></span><br><span class="line"><span class="comment"># 调用方式和原始文件一致,但只能使用同版本的python解释器执行</span></span><br></pre></td></tr></table></figure><p><a name="7c18b8d8"></a></p><h2 id="Pycharm-文件头配置"><a href="#Pycharm-文件头配置" class="headerlink" title="Pycharm 文件头配置"></a>Pycharm 文件头配置</h2><p><br>File  ⇒  Settings ⇒ Editor  ⇒ File and Code Templates<br><br>其中python个人设置<br></p><a id="more"></a>





<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/env python</span></span><br><span class="line"># coding:utf-8</span><br><span class="line"></span><br><span class="line"># file: $&#123;NAME&#125;.py</span><br><span class="line"># time: $&#123;DATE&#125; $&#123;TIME&#125;</span><br><span class="line"># desc:</span><br></pre></td></tr></table></figure>


<p><a name="a3b3bac0"></a></p>
<h2 id="Vscode-配置背景图片"><a href="#Vscode-配置背景图片" class="headerlink" title="Vscode 配置背景图片"></a>Vscode 配置背景图片</h2><ol>
<li><p>安装 vscode extension: background</p>
</li>
<li><p>修改配置文件如下</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"background.useDefault": false,</span><br><span class="line">    "background.enabled": true,</span><br><span class="line">    "background.customImages": [</span><br><span class="line">        <span class="string">"file:///C:/Users/haibo/Desktop/%E5%A3%81%E7%BA%B8/timg.jpeg"</span></span><br><span class="line">    ],</span><br><span class="line">    "background.style": &#123;</span><br><span class="line">        "content": "''",</span><br><span class="line">        "pointer-events": "none",</span><br><span class="line">        "position": "absolute",</span><br><span class="line">        "z-index": "99999",</span><br><span class="line">        "width": "100%",</span><br><span class="line">        "height": "100%",</span><br><span class="line">        "background-position": "center",</span><br><span class="line">        "background-repeat": "no-repeat",</span><br><span class="line">        "background-size": "100%,100%",</span><br><span class="line">        "opacity": 0.3</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>其中 background.customImages 即为背景图片列表,最多可设置三张</p>
</li>
</ol>
<br>


]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>个人习惯</tag>
      </tags>
  </entry>
  <entry>
    <title>pandas读写csv及追加</title>
    <url>/htwm_open_sesame/2020/03/12/yuque/pandas%E8%AF%BB%E5%86%99csv%E5%8F%8A%E8%BF%BD%E5%8A%A0/</url>
    <content><![CDATA[<p><a name="jBSla"></a></p><h2 id="pandas写入csv"><a href="#pandas写入csv" class="headerlink" title="pandas写入csv"></a>pandas写入csv</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = pd.DataFrame(columns=[<span class="string">'key1'</span>, <span class="string">'key2'</span>, <span class="string">'key3'</span>, <span class="string">'key4'</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    result = result.append(&#123;<span class="string">'key1'</span>: <span class="number">1</span>, <span class="string">'key2'</span>: <span class="number">2</span>, <span class="string">'key3'</span>: <span class="number">3</span>, <span class="string">'key4'</span>: <span class="number">4</span>&#125;,ignore_index=<span class="literal">True</span>)</span><br><span class="line">result.to_csv(<span class="string">'test.csv'</span>, sep=<span class="string">','</span>, index=<span class="literal">False</span>,mode=<span class="string">'w'</span>)</span><br></pre></td></tr></table></figure><a id="more"></a>


<br>

<ul>
<li>追加写入</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result.to_csv(<span class="string">'test.csv'</span>, sep=<span class="string">','</span>, index=<span class="literal">False</span>,mode=<span class="string">'a'</span>)</span><br></pre></td></tr></table></figure>


<ul>
<li><p>追加写入 时表头 也会追加<br><a name="6OXQv"></a></p>
<h2 id="pandas读取csv"><a href="#pandas读取csv" class="headerlink" title="pandas读取csv"></a>pandas读取csv</h2></li>
<li><p>遇到了再说</p>
</li>
</ul>
]]></content>
      <categories>
        <category>后端开发</category>
      </categories>
      <tags>
        <tag>pandas</tag>
        <tag>csv</tag>
      </tags>
  </entry>
  <entry>
    <title>Python将无限分类结构数据转为json</title>
    <url>/htwm_open_sesame/2020/03/08/yuque/Python%E5%B0%86%E6%97%A0%E9%99%90%E5%88%86%E7%B1%BB%E7%BB%93%E6%9E%84%E6%95%B0%E6%8D%AE%E8%BD%AC%E4%B8%BAjson/</url>
    <content><![CDATA[<br><ul>
<li><a href="https://segmentfault.com/q/1010000008541784" target="_blank" rel="noopener">原文链接</a></li>
</ul><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">source=[</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"my document"</span>,<span class="string">"id"</span>:<span class="number">1</span> , <span class="string">"parentid"</span>: <span class="number">0</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"photos"</span>,<span class="string">"id"</span>:<span class="number">2</span> , <span class="string">"parentid"</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"Friend"</span>,<span class="string">"id"</span>:<span class="number">3</span> , <span class="string">"parentid"</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"Wife"</span>,<span class="string">"id"</span>:<span class="number">4</span> , <span class="string">"parentid"</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"Company"</span>,<span class="string">"id"</span>:<span class="number">5</span> , <span class="string">"parentid"</span>: <span class="number">2</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"Program Files"</span>,<span class="string">"id"</span>:<span class="number">6</span> , <span class="string">"parentid"</span>: <span class="number">1</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"intel"</span>,<span class="string">"id"</span>:<span class="number">7</span> , <span class="string">"parentid"</span>: <span class="number">6</span> &#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>:<span class="string">"java"</span>,<span class="string">"id"</span>:<span class="number">8</span> , <span class="string">"parentid"</span>: <span class="number">6</span> &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><a id="more"></a>





<ol>
<li><p>递归</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getChildren</span><span class="params">(id=<span class="number">0</span>)</span>:</span></span><br><span class="line">    res =[]</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> source:</span><br><span class="line">        <span class="keyword">if</span> obj[<span class="string">"parentid"</span>] ==id:</span><br><span class="line">            res.append(&#123;<span class="string">"id"</span>:obj[<span class="string">"id"</span>],<span class="string">"text"</span>:obj[<span class="string">"name"</span>],<span class="string">"children"</span>:getChildren(obj[<span class="string">"id"</span>])&#125;)</span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
</li>
<li><p>哈希表</p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tree_dict = &#123;&#125;</span><br><span class="line">tree_data = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> source:</span><br><span class="line">    tree_dict[item[<span class="string">"id"</span>]] = item</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tree_dict:</span><br><span class="line">    <span class="keyword">if</span> tree_dict[i][<span class="string">"parentid"</span>]:</span><br><span class="line">        parentid = tree_dict[i][<span class="string">"parentid"</span>]</span><br><span class="line">        parent = tree_dict[parentid]</span><br><span class="line">        parent.setdefault(<span class="string">"children"</span>, []).append(tree_dict[i])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tree_data.append(tree_dict[i])</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>后端开发</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Jupyter Notebook 安装其他内核</title>
    <url>/htwm_open_sesame/2020/02/02/yuque/%E4%BD%BF%E7%94%A8Jupyter%20Notebook%20%E5%AE%89%E8%A3%85%E5%85%B6%E4%BB%96%E5%86%85%E6%A0%B8/</url>
    <content><![CDATA[<p><a name="GiCcn"></a></p><h2 id="javascript-内核安装"><a href="#javascript-内核安装" class="headerlink" title="javascript 内核安装"></a>javascript 内核安装</h2><p>参考<a href="https://github.com/n-riesco/ijavascript" target="_blank" rel="noopener">ijavascript</a><br></p><ol>
<li><p>windows </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install --upgrade pip</span><br><span class="line">pip3 install jupyter</span><br><span class="line">npm install -g ijavascript</span><br><span class="line">ijsinstall</span><br></pre></td></tr></table></figure>
</li>
<li><p>正常运行 jupyter notebook 选择node 的内核即可</p>
</li>
</ol><a id="more"></a>


<br>
<br>


]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>jupyter</tag>
      </tags>
  </entry>
  <entry>
    <title>GraphQl学习</title>
    <url>/htwm_open_sesame/2020/01/19/yuque/GraphQl%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><a name="cd02615d"></a></p><h2 id="Graph介绍"><a href="#Graph介绍" class="headerlink" title="Graph介绍"></a>Graph介绍</h2><ul>
<li>特点<ul>
<li>请求需要的数据 不多不少</li>
<li>获取多个资源，只用一个请求</li>
<li>描述所有可能类型的系统,便于维护,根据需求平滑眼镜演进,添加或隐藏字段</li>
</ul>
</li>
<li>node监听运行修改文件命令 nodemon执行命令</li>
<li>GraphHelloWolrd```javascript<br>const express = require(‘express’)<br>const {buildSchema} = require(‘graphql’)<br>const graphqlHTTP = require(‘express-graphql’)</li>
</ul><a id="more"></a>

<p>const schema = buildSchema(<code>type Account{
    name: String
    age: Int
    sex: String
    department: String
  }
  type Query {
    hello: String
    accountName: String
    age: Int
    account: Account
  }</code>)</p>
<p>const root = {<br>  hello: () =&gt; {<br>    return ‘hello world’<br>  },<br>  accountName: () =&gt; {<br>    return ‘xiaoming’<br>  },<br>  age: () =&gt; {<br>    return 18<br>  },<br>  account: () =&gt; {<br>    return {<br>      name: ‘nizi’,<br>      age: ‘18’,<br>      sex: ‘femail’,<br>      department: ‘school’<br>    }<br>  }<br>}</p>
<p>const app = express()</p>
<p>app.use(‘/graphql’, graphqlHTTP({<br>  schema: schema,<br>  rootValue: root,<br>  graphiql: true<br>}))</p>
<p>app.listen(3000)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;a name=&quot;9WsJ8&quot;&gt;&lt;/a&gt;</span><br><span class="line">## 基本数据类型</span><br><span class="line"></span><br><span class="line">- 基本类型 String,Int,Float,Boolean和ID</span><br><span class="line">&lt;a name=&quot;DCuaR&quot;&gt;&lt;/a&gt;</span><br><span class="line">## 参数传递 </span><br><span class="line">query&lt;br /&gt;</span><br><span class="line"></span><br><span class="line">```javascript</span><br><span class="line">query&#123;</span><br><span class="line">	getClassMates(classNo: 31)</span><br><span class="line">  account(username:&quot;xiaoming&quot;) &#123;</span><br><span class="line">    name</span><br><span class="line">    age</span><br><span class="line">    sex</span><br><span class="line">    department</span><br><span class="line">    salary(city:&quot;canton&quot;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<ul>
<li>示例2 js<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123;buildSchema&#125; = <span class="built_in">require</span>(<span class="string">'graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> graphqlHTTP = <span class="built_in">require</span>(<span class="string">'express-graphql'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> schema = buildSchema(<span class="string">`</span></span><br><span class="line"><span class="string">    type Account &#123;</span></span><br><span class="line"><span class="string">        name: String</span></span><br><span class="line"><span class="string">        age: Int</span></span><br><span class="line"><span class="string">        sex: String</span></span><br><span class="line"><span class="string">        department: String</span></span><br><span class="line"><span class="string">        salary(city: String): Int     </span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    type Query &#123;</span></span><br><span class="line"><span class="string">        getClassMates(classNo: Int!): [String]</span></span><br><span class="line"><span class="string">        account(username: String): Account</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = &#123;</span><br><span class="line">    getClassMates: <span class="function">(<span class="params">&#123;classNo&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> obj = &#123;</span><br><span class="line">            <span class="number">31</span>: [<span class="string">'张三'</span>],</span><br><span class="line">            <span class="number">61</span>: [<span class="string">'李四'</span>]</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> obj[classNo]</span><br><span class="line">    &#125;,</span><br><span class="line">    account: <span class="function">(<span class="params">&#123;username&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> name = username;</span><br><span class="line">        <span class="keyword">const</span> sex = <span class="string">'man'</span>;</span><br><span class="line">        <span class="keyword">const</span> age = <span class="number">18</span>;</span><br><span class="line">        <span class="keyword">const</span> department = <span class="string">"development"</span>;</span><br><span class="line">        <span class="keyword">const</span> salary = <span class="function">(<span class="params">&#123;city&#125;</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (city === <span class="string">'canton'</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">10000</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">3000</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            name,</span><br><span class="line">            sex,</span><br><span class="line">            age,</span><br><span class="line">            department,</span><br><span class="line">            salary</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/graphql'</span>, graphqlHTTP(&#123;</span><br><span class="line">    schema: schema,</span><br><span class="line">    rootValue: root,</span><br><span class="line">    graphiql: <span class="literal">true</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

</li>
</ul>
<br>

<p><a name="sdBuX"></a></p>
<h2 id="GrqphQl-客户端访问"><a href="#GrqphQl-客户端访问" class="headerlink" title="GrqphQl 客户端访问"></a>GrqphQl 客户端访问</h2><p>示例3 获取示例2中的数据</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"getData()"</span>&gt;</span>获取数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">getData</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> query = `</span></span><br><span class="line"><span class="javascript">    query Account($username: <span class="built_in">String</span>,<span class="attr">$city</span>: <span class="built_in">String</span>) &#123;</span></span><br><span class="line">      account(username: $username) &#123;</span><br><span class="line">        name</span><br><span class="line">        age</span><br><span class="line">        sex</span><br><span class="line">        salary(city: $city)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    `;</span><br><span class="line"><span class="actionscript">    <span class="keyword">const</span> variables = &#123;username: <span class="string">'xiaoming'</span>, city: <span class="string">"canton"</span>&#125;;</span></span><br><span class="line"><span class="actionscript">    fetch(<span class="string">'/graphql'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">      method: <span class="string">"POST"</span>,</span></span><br><span class="line">      headers: &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">"Content-Type"</span>: <span class="string">"application/json"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"Accept"</span>: <span class="string">"application/json"</span></span></span><br><span class="line">      &#125;,</span><br><span class="line"><span class="javascript">      body: <span class="built_in">JSON</span>.stringify(&#123;</span></span><br><span class="line">        query: query,</span><br><span class="line">        variables: variables</span><br><span class="line">      &#125;)</span><br><span class="line"><span class="javascript">    &#125;).then(<span class="function"><span class="params">res</span> =&gt;</span> res.json)</span></span><br><span class="line"><span class="javascript">    .then(<span class="function"><span class="params">json</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(json)</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<br>

<p><a name="LdNqC"></a></p>
<h2 id="使用Mutations-修改数据"><a href="#使用Mutations-修改数据" class="headerlink" title="使用Mutations 修改数据"></a>使用Mutations 修改数据</h2><p>示例 创建数据查询体<br></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">mutation &#123;</span><br><span class="line">  createAccount(input: &#123;</span><br><span class="line">    name: <span class="string">"xiaoming"</span>,</span><br><span class="line">    age:<span class="number">20</span></span><br><span class="line">    sex: <span class="string">"female"</span></span><br><span class="line">    department: <span class="string">"test"</span></span><br><span class="line">  &#125;) &#123;</span><br><span class="line">    name</span><br><span class="line">    age</span><br><span class="line">    sex</span><br><span class="line">    department</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><br>示例 更新数据查询体<br></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">mutation &#123;</span><br><span class="line">  updateAccount(id: <span class="string">"xiaoming"</span>, <span class="attr">input</span>:&#123;</span><br><span class="line">    age:<span class="number">100</span></span><br><span class="line">  &#125;) &#123;</span><br><span class="line">    age</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><br>示例 查询数据 查询体<br></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">query &#123;</span><br><span class="line">  account&#123;</span><br><span class="line">    name</span><br><span class="line">    sex</span><br><span class="line">    age</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><br>示例 mutation.js文件<br></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> &#123;buildSchema&#125; = <span class="built_in">require</span>(<span class="string">'graphql'</span>);</span><br><span class="line"><span class="keyword">const</span> graphqlHTTP = <span class="built_in">require</span>(<span class="string">'express-graphql'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> schema = buildSchema(<span class="string">`</span></span><br><span class="line"><span class="string">  input AccountInput &#123;</span></span><br><span class="line"><span class="string">    name: String</span></span><br><span class="line"><span class="string">    age: Int</span></span><br><span class="line"><span class="string">    sex: String</span></span><br><span class="line"><span class="string">    department: String</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  type Account &#123;</span></span><br><span class="line"><span class="string">    name: String</span></span><br><span class="line"><span class="string">    age: Int</span></span><br><span class="line"><span class="string">    sex: String</span></span><br><span class="line"><span class="string">    department: String</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  type Mutation &#123;</span></span><br><span class="line"><span class="string">    createAccount(input: AccountInput): Account</span></span><br><span class="line"><span class="string">    updateAccount(id: ID!, input: AccountInput): Account   </span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  type Query &#123;</span></span><br><span class="line"><span class="string">    account: [Account] </span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">`</span>);</span><br><span class="line"><span class="keyword">const</span> fakeDb = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> root = &#123;</span><br><span class="line">  account() &#123;</span><br><span class="line">    <span class="keyword">let</span> arr = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> key <span class="keyword">in</span> fakeDb) &#123;</span><br><span class="line">      arr.push(fakeDb[key])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;,</span><br><span class="line">  createAccount(&#123;input&#125;) &#123;</span><br><span class="line">    fakeDb[input.name] = input;</span><br><span class="line">    <span class="keyword">return</span> fakeDb[input.name]</span><br><span class="line">  &#125;,</span><br><span class="line">  updateAccount(&#123;id, input&#125;) &#123;</span><br><span class="line">    <span class="keyword">const</span> updatedAccount = <span class="built_in">Object</span>.assign(&#123;&#125;, fakeDb[id], input)</span><br><span class="line">    <span class="built_in">console</span>.log(id, updatedAccount)</span><br><span class="line">    fakeDb[id] = updatedAccount;</span><br><span class="line">    <span class="built_in">console</span>.log(fakeDb)</span><br><span class="line">    <span class="keyword">return</span> updatedAccount</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/graphql'</span>, graphqlHTTP(&#123;</span><br><span class="line">  schema: schema,</span><br><span class="line">  rootValue: root,</span><br><span class="line">  graphiql: <span class="literal">true</span></span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line">app.use(express.static(<span class="string">'.'</span>))</span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<br>


]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>GraphQL</tag>
      </tags>
  </entry>
  <entry>
    <title>前端零碎知识点</title>
    <url>/htwm_open_sesame/2020/01/03/%E7%BD%91%E8%AF%BE%E7%AC%94%E8%AE%B0/%E5%89%8D%E7%AB%AF%E9%9B%B6%E7%A2%8E%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<h2 id="前端笔记"><a href="#前端笔记" class="headerlink" title="前端笔记"></a>前端笔记</h2><ol>
<li><p>解决浮动塌陷的问题  1. 给父元素增加高度 2. 在浮动元素后追加空元素 添加 clear属性</p>
</li>
<li><p>元素分类  块元素 行内元素 可变元素</p>
</li>
<li><p>宽元素的默认宽度为100%</p>
</li>
</ol><h3 id="webpack-配置文件"><a href="#webpack-配置文件" class="headerlink" title="webpack 配置文件"></a>webpack 配置文件</h3><ol>
<li><p>默认名称 webpack.config.js</p>
</li>
<li><p>主要选项如下   - 可参考webpack官网</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    entry: <span class="string">'./entry.js'</span>, <span class="comment">// 入口文件</span></span><br><span class="line">	output: &#123;</span><br><span class="line">        path: __dirname + <span class="string">'/dist'</span>,</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">            	test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">            	loader: <span class="string">'style-loader'</span>    </span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">            	test: <span class="regexp">/\.css$/</span>,</span><br><span class="line">            	loader: <span class="string">'css-loader'</span>    </span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.png$/</span>,</span><br><span class="line">                loader: <span class="string">'file-loader'</span>,</span><br><span class="line">                option: &#123;</span><br><span class="line">                    name: <span class="string">'[name].[ext]'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [<span class="keyword">new</span> HtmlWebpackPlugin()] <span class="comment">// 插件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





</li>
</ol><a id="more"></a>

<h3 id="mint-ui-基于vue的移动端组件库"><a href="#mint-ui-基于vue的移动端组件库" class="headerlink" title="mint-ui 基于vue的移动端组件库"></a>mint-ui 基于vue的移动端组件库</h3>]]></content>
      <categories>
        <category>网课笔记</category>
      </categories>
      <tags>
        <tag>前端基础</tag>
      </tags>
  </entry>
  <entry>
    <title>多媒体技术及应用</title>
    <url>/htwm_open_sesame/2019/12/25/%E7%BD%91%E8%AF%BE%E7%AC%94%E8%AE%B0/%E5%A4%9A%E5%AA%92%E4%BD%93%E6%8A%80%E6%9C%AF%E5%8F%8A%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<ul>
<li>来源:  <a href="https://www.icourse163.org/learn/SZU-1001752002?tid=1206943287#/learn/announce" target="_blank" rel="noopener">https://www.icourse163.org/learn/SZU-1001752002?tid=1206943287#/learn/announce</a> </li>
</ul><h2 id="第1章-多媒体技术基础"><a href="#第1章-多媒体技术基础" class="headerlink" title="第1章 多媒体技术基础"></a>第1章 多媒体技术基础</h2><h3 id="多媒体开发工具"><a href="#多媒体开发工具" class="headerlink" title="多媒体开发工具"></a>多媒体开发工具</h3><ol>
<li>多媒体素材制作工具 :<ol>
<li>文本处理word 艺术字  cool 3d</li>
<li>音频处理 Audition  Cakewalk</li>
<li>图像图像 Corel DRAW   Photoshop</li>
<li>动画制作软件flash  3ds max\</li>
<li>视频编辑软件 Premiere  会声会影</li>
</ol>
</li>
<li>多媒体著作工具<ol>
<li>ppt     dreamweaver</li>
</ol>
</li>
<li>多媒体应用</li>
</ol><a id="more"></a>

<h2 id="第2章-数字音频技术"><a href="#第2章-数字音频技术" class="headerlink" title="第2章 数字音频技术"></a>第2章 数字音频技术</h2><h3 id="数字音频的基础"><a href="#数字音频的基础" class="headerlink" title="数字音频的基础"></a>数字音频的基础</h3><ol>
<li>声音的重要指标<ol>
<li>振幅</li>
<li>周期</li>
<li>频率</li>
</ol>
</li>
<li>声音听觉特性<ol>
<li>响度</li>
<li>音调</li>
<li>音色</li>
</ol>
</li>
</ol>
<h3 id="声音的数字化"><a href="#声音的数字化" class="headerlink" title="声音的数字化"></a>声音的数字化</h3><pre><code> 1. 声音信号的类型
      1. 模拟信号 - 自然界 物理
          2. 数字信号 - 计算机
2. 数字音频质量的三要素
        1. 采样频率
                  2. 量化位数
                3. 声道数
3. 音频文件类型
        1. WAV
                  2. MP3
                3. WMA
                           4. MIDI</code></pre><ol start="4">
<li>音频的处理<ol>
<li>去除无用部分</li>
<li>降噪</li>
<li>调节均衡</li>
<li>添加混响,延迟和变速</li>
<li>音频文件的格式转换</li>
</ol>
</li>
</ol>
<h3 id="数字音频压缩标准"><a href="#数字音频压缩标准" class="headerlink" title="数字音频压缩标准"></a>数字音频压缩标准</h3><ol>
<li>音频压缩方法概述<ol>
<li>输入 -&gt; 编码器 -&gt; 存储传输 -&gt; 解码器 -&gt; 播放设备</li>
</ol>
</li>
<li>音频压缩工具软件  (请自行补充网络可用工具)</li>
</ol>
<h3 id="声卡与电声设备"><a href="#声卡与电声设备" class="headerlink" title="声卡与电声设备"></a>声卡与电声设备</h3><ol>
<li><p>声卡的性能指标</p>
<ol>
<li>采样和量化能力</li>
<li>芯片类型</li>
<li>总线类型</li>
<li>输出声道数<ol>
<li>2/2.1/4.1/5.1</li>
</ol>
</li>
</ol>
</li>
<li><p>传声器</p>
<ol>
<li>传声器原理<ol>
<li>电动式传声器 -&gt; 电磁换能原理</li>
</ol>
</li>
<li>传声器的性能指标<ol>
<li>灵敏度</li>
<li>频率响应</li>
<li>指向性</li>
<li>输出阻抗</li>
</ol>
</li>
</ol>
</li>
<li><p>扬声器</p>
</li>
<li><p>音箱</p>
</li>
</ol>
<h3 id="电子音乐与MIDI"><a href="#电子音乐与MIDI" class="headerlink" title="电子音乐与MIDI"></a>电子音乐与MIDI</h3><ol>
<li>电子音乐的发展<ol>
<li>电声音乐  电子小提琴啥的</li>
<li>电子音乐  完全同过电子设备和电子手段生成的音乐</li>
<li>电脑音乐 计算机+ 电子音乐</li>
</ol>
</li>
<li></li>
</ol>
<h3 id="音频编辑软件"><a href="#音频编辑软件" class="headerlink" title="音频编辑软件"></a>音频编辑软件</h3><ul>
<li>Audition  (本章内容 目前暂时不是很感兴趣, 将不会记录笔记,听听流程过了)</li>
</ul>
<h2 id="第3章-数字图像技术"><a href="#第3章-数字图像技术" class="headerlink" title="第3章 数字图像技术"></a>第3章 数字图像技术</h2><h3 id="数字图像基础知识"><a href="#数字图像基础知识" class="headerlink" title="数字图像基础知识"></a>数字图像基础知识</h3><ol>
<li><p>人眼感知颜色的度量 色调 饱和度 亮度 色调表示光的颜色。饱和度表示彩色的深浅。</p>
<ol>
<li>颜色模型<ol>
<li>RGB模型</li>
<li>Cmyk模型  一般打印的时候所采用的颜色模型</li>
<li>HSB模型  模拟人眼所看到的方式</li>
<li>Yuv YIq模型  彩色电视机中使用的彩色空间</li>
<li>灰度模型 适用模拟黑白照片</li>
<li>黑白模型  适应制作黑白线条</li>
</ol>
</li>
</ol>
</li>
<li><p>图像和图形的区别</p>
</li>
<li><p>图像的数字化</p>
<ol>
<li>图像的主要参数<ol>
<li>分辨率 / 显示分辨率 、图像分辨率、 像素分辨率</li>
<li>颜色深度(记录每个像素的二进制位数)</li>
</ol>
</li>
</ol>
</li>
<li><p>图像的文件格式</p>
<ol>
<li><p>BMP格式  Windows标准图像文件  特点，每个文件只能存放一幅图，像多种颜色存储格式</p>
</li>
<li><p>GIF格式 采用lzw压缩算法处理数据  最多可以存储256色 每个文件可以存放多幅图像</p>
</li>
<li><p>Jpg格式  一种高效率的压缩文件格式  对于计算机绘制的具有明显边界的图形，处理效果不佳</p>
</li>
<li><p>Png格式  支持24位色彩图像 存储灰度图像时，图像深度达16位  除彩色图像时，深度可以48位</p>
</li>
<li><p>TIff文件格式  通用的位映射文件格式</p>
</li>
<li><p>PSD格式  Photoshop的专用文件格式</p>
</li>
</ol>
</li>
</ol>
<h3 id="静止图像的压缩标准"><a href="#静止图像的压缩标准" class="headerlink" title="静止图像的压缩标准"></a>静止图像的压缩标准</h3><ol>
<li>图像压缩的依据 <ol>
<li>图像的冗余</li>
<li>图像数据的相关性</li>
<li>人眼对边缘急剧变化不敏感</li>
</ol>
</li>
<li>图像压缩编码分为有失真编码和无失真编码   (依据能否恢复)</li>
</ol>
<h3 id="显示设备与扫描仪"><a href="#显示设备与扫描仪" class="headerlink" title="显示设备与扫描仪"></a>显示设备与扫描仪</h3><ol>
<li><p>显示器</p>
<ol>
<li><p>显示设备主要有显示器与显卡组成</p>
</li>
<li><p>显示卡是用于将主机中的数字信号转换为图像信号，并显示在显示器上</p>
</li>
<li><p>显卡的基本结构</p>
<ol>
<li>显示芯片显示内存 DAC BIOS 总线接口</li>
</ol>
</li>
<li><p>显卡的性能指标   分辨率 颜色深度 显存</p>
</li>
<li><p>显示器的性能指标  可视角度  屏幕尺寸</p>
</li>
</ol>
</li>
<li><p>扫描仪的性能指标</p>
<ul>
<li><p>分辨率  光学分辨率 插值分辨率</p>
</li>
<li><p>色彩位数</p>
</li>
<li><p>扫描速度  </p>
</li>
</ul>
</li>
</ol>
<h3 id="图像处理软件-Photoshop"><a href="#图像处理软件-Photoshop" class="headerlink" title="图像处理软件 Photoshop."></a>图像处理软件 Photoshop.</h3><ul>
<li>此处主要了解, 具体实践课程 主要参考B站教学视频</li>
</ul>
<h2 id="计算机动画技术"><a href="#计算机动画技术" class="headerlink" title="计算机动画技术"></a>计算机动画技术</h2><h3 id="计算机动画基础"><a href="#计算机动画基础" class="headerlink" title="计算机动画基础"></a>计算机动画基础</h3><ol>
<li>计算机分类<ol>
<li>按动画的系统功能分类</li>
<li>按动画的制作原理分类<ol>
<li>计算机的辅助动画</li>
<li>计算机的生成动画</li>
</ol>
</li>
<li>按运动的控制方法分类<ol>
<li>关键帧动画</li>
<li>算法动画</li>
</ol>
</li>
</ol>
</li>
<li>常用动画文件格式<ul>
<li>gif</li>
<li>swf  flash文件格式  可以插入音乐</li>
<li>flic</li>
<li>qtm</li>
<li>vrml</li>
</ul>
</li>
<li>计算机动画的应用领域<ol>
<li>影视广告</li>
<li>工程设计</li>
<li>飞行模拟</li>
<li>教育与娱乐</li>
<li>科学计算可视化</li>
<li>虚拟现实技术</li>
</ol>
</li>
</ol>
<h3 id="计算机动画的制作环境"><a href="#计算机动画的制作环境" class="headerlink" title="计算机动画的制作环境"></a>计算机动画的制作环境</h3><ol>
<li><p>硬件 高性能计算机 /  输入设备 (扫描仪 图像输入板凳)</p>
</li>
<li><p>软件 系统软件 / 动画软件(二维动画 三维动画)</p>
</li>
</ol>
<h3 id="矢量动画制作软件flash"><a href="#矢量动画制作软件flash" class="headerlink" title="矢量动画制作软件flash"></a>矢量动画制作软件flash</h3><ol>
<li><p>Flash概述</p>
<ol>
<li><p>矢量图形</p>
</li>
<li><p>交互式动画</p>
</li>
<li><p>流式播放技术</p>
</li>
<li><p>多种文件格式</p>
</li>
<li><p>插件工作方式</p>
</li>
</ol>
</li>
<li><p>ActionScript flash的一种动作脚本语言</p>
</li>
</ol>
<h2 id="数字视频技术"><a href="#数字视频技术" class="headerlink" title="数字视频技术"></a>数字视频技术</h2><h3 id="数字视频基础知识"><a href="#数字视频基础知识" class="headerlink" title="数字视频基础知识"></a>数字视频基础知识</h3><ol>
<li><p>数字视频的优点</p>
<ol>
<li>数字视频便于创造性的编辑与合成</li>
<li>数字视频可不失真进行多次复制</li>
<li>网络环境下容易实现资源共享</li>
</ol>
</li>
<li><p>视频的文件格式</p>
<ol>
<li>AVI文件格式 音频视频交叉记录的文件格式 图像质量好，体积过于庞大</li>
<li>MOV文件格式 跨平台存储空间小</li>
<li>MPG文件  </li>
<li>WMV文件  数字视频压缩格式</li>
<li>RM 与 RMVB  合理运用网络传输</li>
<li>MP4  高质量流媒体视频 啊你好你好你好</li>
</ol>
</li>
<li><p>运动图像压缩标准</p>
<ol>
<li>压缩原理<ol>
<li>运动图像的相邻帧之间存在冗余，并以帧速率进行预测压缩</li>
<li>像素点颜色变化的阈值 和差值</li>
</ol>
</li>
<li>数码摄像机的性能指标<ol>
<li>清晰度</li>
<li>最低照度</li>
<li>自动增益控制</li>
<li>信噪比</li>
<li>背景光补偿</li>
<li>电子快门</li>
</ol>
</li>
</ol>
</li>
</ol>
<h3 id="视频编辑软件"><a href="#视频编辑软件" class="headerlink" title="视频编辑软件"></a>视频编辑软件</h3><ol>
<li>Premiere  </li>
</ol>
]]></content>
      <categories>
        <category>网课笔记</category>
      </categories>
      <tags>
        <tag>中国大学mooc</tag>
      </tags>
  </entry>
  <entry>
    <title>云服务器samba设置</title>
    <url>/htwm_open_sesame/2019/12/22/Linux/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8samba%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<p>由于安全问题,云服务器运营商会默认限制部分端口的访问,如samba使用的445端口,则导致默认设置的samba无法访问,自己解决方案如下</p><ol>
<li><p>linux samba 修改监听端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 直接在samba 配置文件中添加以下语句</span></span><br><span class="line">smb ports = 4455</span><br><span class="line"><span class="comment"># 重启smb服务 则samba监听端口修改为4455</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>windows设置端口转发</p>
<p>原文来自于 <a href="https://www.zhihu.com/question/59814912" target="_blank" rel="noopener">https://www.zhihu.com/question/59814912</a> </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1. 添加端口转发,添加端口转发之后 实际上访问 \\127.0.0.1 就是在访问设置ip的samba</span></span><br><span class="line">netsh interface portproxy add v4tov4 listenport=445 listenaddress=127.0.0.1 connectport=4455 connectaddress=xx.xx.xx.xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 其他命令</span></span><br><span class="line"><span class="comment"># 查看全部端口转发</span></span><br><span class="line">netsh interface portproxy show all</span><br><span class="line"><span class="comment"># 删除端口转发</span></span><br><span class="line">netsh interface portproxy delete v4tov4 listenport=445 listenaddress=127.0.0.1</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过资源管理器访问 \\127.0.0.1 实际上就是在访问监听端口的samba</p>
</li>
</ol><a id="more"></a>

<p>ps: 亲测有效(2019/12/22)</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>samba</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>个人博客分类规划</title>
    <url>/htwm_open_sesame/2019/12/16/%E5%85%B6%E4%BB%96/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%86%E7%B1%BB%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<p>分类 文章只写一个分类,避免重复,语言还是直接按照语言进行分类</p>
<ul>
<li><p>前端开发</p>
</li>
<li><p>IT技术</p>
</li>
<li><p>网课笔记 </p>
</li>
<li><p>读书笔记</p>
</li>
<li><p>Linux</p>
</li>
<li><p>软件安装</p>
</li>
<li><p>其他</p>
</li>
<li><p>Python</p>
</li>
<li><p>Javascript</p>
</li>
<li><p>Golang</p>
</li>
<li><p>时事新闻</p>
</li>
</ul>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>vue问题记录</title>
    <url>/htwm_open_sesame/2019/11/23/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/vue%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="vue使用-env文件保存全局变量"><a href="#vue使用-env文件保存全局变量" class="headerlink" title="vue使用.env文件保存全局变量"></a>vue使用.env文件保存全局变量</h2><ul>
<li><p>vue-cli 中可以使用.env文件保存环境变量,以便于快速切换环境</p>
</li>
<li><p>使用方式如下</p>
<ol>
<li><p>在主目录下创建.env文件,文件内容参照如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">VUE_APP_TITLE = <span class="string">"标题测试"</span></span><br><span class="line"><span class="comment">// 必须使用VUE_APP_ 开头</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在任何vue文件中均可使用如下方式进行读取,如:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(process.env.VUE_APP_TITLE)</span><br></pre></td></tr></table></figure>
</li>
</ol>
</li>
<li><p>使用不同的.env文件切换变量</p>
<ul>
<li><p>如创建.env.test文件</p>
</li>
<li><p>然后在启动脚本命令中配置 </p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"scripts": &#123;</span><br><span class="line">    "test": "vue-cli-service serve --mode test",</span><br><span class="line">    "serve": "vue-cli-service serve",</span><br><span class="line">    "build": "vue-cli-service build"</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
</li>
<li><p>即可使用 npm run test 运行服务,调用的即为.env.test 中的环境变量</p>
</li>
</ul>
</li>
</ul>
<a id="more"></a>

<h2 id="VUE打包后静态资源访问为空"><a href="#VUE打包后静态资源访问为空" class="headerlink" title="VUE打包后静态资源访问为空"></a>VUE打包后静态资源访问为空</h2><ul>
<li><p>参考链接  <a href="https://cli.vuejs.org/zh/config/#目标浏览器" target="_blank" rel="noopener">https://cli.vuejs.org/zh/config/#%E7%9B%AE%E6%A0%87%E6%B5%8F%E8%A7%88%E5%99%A8</a> </p>
</li>
<li><p>解决方案</p>
<ul>
<li><p>在项目根目录新建文件 vue.config.js</p>
</li>
<li><p>文件中包含如下内容</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="comment">// 选项...</span></span><br><span class="line">  publicPath: <span class="string">'./'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu18.04安装的坑</title>
    <url>/htwm_open_sesame/2019/11/05/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/Ubuntu18-04%E5%AE%89%E8%A3%85%E5%9D%91/</url>
    <content><![CDATA[<h2 id="SSH服务安装"><a href="#SSH服务安装" class="headerlink" title="SSH服务安装"></a>SSH服务安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br><span class="line">sudo service ssh restart</span><br></pre></td></tr></table></figure>



<h2 id="Linux链接SSR"><a href="#Linux链接SSR" class="headerlink" title="Linux链接SSR"></a>Linux链接SSR</h2><ul>
<li>参考github electron-ssr</li>
</ul>
]]></content>
      <categories>
        <category>软件安装</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Electron桌面软件开发</title>
    <url>/htwm_open_sesame/2019/10/31/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/Electron%E6%A1%8C%E9%9D%A2%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="Electron桌面软件开发"><a href="#Electron桌面软件开发" class="headerlink" title="Electron桌面软件开发"></a>Electron桌面软件开发</h1><h2 id="Electron-官方示例代码"><a href="#Electron-官方示例代码" class="headerlink" title="Electron 官方示例代码"></a>Electron 官方示例代码</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/electron/electron-api-demos</span><br><span class="line">$ <span class="built_in">cd</span> electron-api-demos</span><br><span class="line">$ npm install <span class="comment"># 需要配置镜像 或者vpn</span></span><br><span class="line">$ npm start</span><br></pre></td></tr></table></figure>

<p>执行npm start 之后会展开一个官方示例的一个界面软件,大致展示electron部分功能</p>
<p>先写爬虫去了 未完待续 :cry:</p>
<a id="more"></a>



]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>electron</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>如何批量导入阿里icon</title>
    <url>/htwm_open_sesame/2019/10/28/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%A6%82%E4%BD%95%E6%89%B9%E9%87%8F%E5%AF%BC%E5%85%A5%E9%98%BF%E9%87%8Cicon/</url>
    <content><![CDATA[<h1 id="如何批量导出阿里icon"><a href="#如何批量导出阿里icon" class="headerlink" title="如何批量导出阿里icon"></a>如何批量导出阿里icon</h1><p>原文章来源  <a href="https://www.jianshu.com/p/59dd28f0b9c9" target="_blank" rel="noopener">https://www.jianshu.com/p/59dd28f0b9c9</a> </p>
<p>阿里icon 素材网站  <a href="https://www.iconfont.cn/" target="_blank" rel="noopener">https://www.iconfont.cn/</a> </p>
<h2 id="下载图标"><a href="#下载图标" class="headerlink" title="下载图标"></a>下载图标</h2><ul>
<li>如何批量将素材导入购物车 比如在以下页面</li>
</ul>
<p><img src="https://htwm623.github.io/htwm_open_sesame/images/2019-10-28_220857.png" alt="2019-10-28_220857"></p>
<a id="more"></a>

<p>在该页面下调出控制台 <kbd>F12</kbd>  在控制台执行如下代码 (亲测:2019年10月28日)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> icons = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.icon-gouwuche1'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> auto_click = <span class="function"><span class="keyword">function</span>(<span class="params">i</span>) </span>&#123; <span class="keyword">if</span> (i &lt; icons.length) &#123; setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; icons.item(i).click(); auto_click(i + <span class="number">1</span>); &#125;, <span class="number">600</span>); &#125; &#125;;</span><br><span class="line"></span><br><span class="line">auto_click(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>



<p>则会自动添加代码至购物车 -&gt; 添加至项目 -&gt; 选择 fontclass 然后下载至本地</p>
<h2 id="调用图标"><a href="#调用图标" class="headerlink" title="调用图标"></a>调用图标</h2><ol>
<li>将下载的文件全部放入项目的assert 文件下</li>
<li>在main.js 中将 iconfont.css 文件引入(个人使用,略过 原文章中修改iconfont.css )</li>
<li>查看incofont.css 文件中 font-family的值,如:</li>
</ol>
<p><img src="https://htwm623.github.io/htwm_open_sesame/images/2019-10-28_233757.png" alt="2019-10-28_233757"></p>
<p>红框即为 fontfamily</p>
<ol start="4">
<li><p>调用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"iconfont icon-bad-fill"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>class空格前部分为 fontfamliy的值 后面一部分可在阿里icon项目页面进行复制</p>
</li>
</ol>
<p>   以上</p>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>图标</tag>
      </tags>
  </entry>
  <entry>
    <title>收藏的文章及网站</title>
    <url>/htwm_open_sesame/2019/10/28/%E5%85%B6%E4%BB%96/%E6%94%B6%E8%97%8F%E7%9A%84%E6%96%87%E7%AB%A0%E5%8F%8A%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<h1 id="收藏的文章及网站"><a href="#收藏的文章及网站" class="headerlink" title="收藏的文章及网站"></a>收藏的文章及网站</h1><h2 id="收藏的网站"><a href="#收藏的网站" class="headerlink" title="收藏的网站"></a>收藏的网站</h2><ol>
<li><p><a href="https://www.hackerrank.com/dashboard" target="_blank" rel="noopener">hackerrank</a>  学习和提高编码能力的网站</p>
</li>
<li><p><a href="https://codesandbox.io/" target="_blank" rel="noopener">codesandbox</a>  在线代码编辑器,可以快速编辑vue react 等一些示例代码,也支持下载 ( <a href="https://codesandbox.io/s/vue-template-4hxce" target="_blank" rel="noopener">https://codesandbox.io/s/vue-template-4hxce</a> )</p>
</li>
</ol><h2 id="前端收藏库或文章"><a href="#前端收藏库或文章" class="headerlink" title="前端收藏库或文章"></a>前端收藏库或文章</h2><ol>
<li><a href="https://github.com/le5le-com/topology" target="_blank" rel="noopener">https://github.com/le5le-com/topology</a>     功能丰富的绘图工具（微服务架构图、拓扑图、流程图、类图等ULM图、脑图，动画、视频支持） </li>
<li><a href="https://www.jianshu.com/p/59dd28f0b9c9" target="_blank" rel="noopener">vue使用第三方icon</a></li>
<li><a href="https://www.jianshu.com/p/7bcf4ad609cf" target="_blank" rel="noopener">markdown中使用特殊的符号</a></li>
</ol><a id="more"></a>

<h2 id="后台收藏库或文章"><a href="#后台收藏库或文章" class="headerlink" title="后台收藏库或文章"></a>后台收藏库或文章</h2><ol>
<li><a href="https://github.com/OlafenwaMoses/ImageAI" target="_blank" rel="noopener">python可以直接使用的AI识别模型</a></li>
<li></li>
</ol>
<h2 id="收藏的库"><a href="#收藏的库" class="headerlink" title="收藏的库"></a>收藏的库</h2><ol>
<li><a href="https://github.com/hitherejoe/animate" target="_blank" rel="noopener">animate css3动画效果</a></li>
<li><a href="https://www.swiper.com.cn/" target="_blank" rel="noopener">swipe 移动端网站触摸滑动效果</a></li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>收藏</tag>
      </tags>
  </entry>
  <entry>
    <title>nvm安装过程记录</title>
    <url>/htwm_open_sesame/2019/10/27/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/nvm%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="nvm安装及简单使用-windows"><a href="#nvm安装及简单使用-windows" class="headerlink" title="nvm安装及简单使用(windows)"></a>nvm安装及简单使用(windows)</h1><ol>
<li><p>为了避免不必要的麻烦及bug,最好先删除及卸载现有node版本</p>
</li>
<li><p>下载安装包  <a href="https://github.com/coreybutler/nvm-windows/releases" target="_blank" rel="noopener">https://github.com/coreybutler/nvm-windows/releases</a>  选择可执行文件的安装包</p>
</li>
<li><p>nvm尽量不要配置代理(ps: 个人配置了淘宝代理之后 安装过程中只安装了node,npm安装失败,未仔细研究原因)</p>
</li>
<li><p>nvm 安装node及激活node</p>
<ol>
<li>nvm install <version>  安装指定版本的node及对应npm,如: nvm install 12.13.0</li>
<li>nvm on <version> 选择使用版本, 如: nvm on 12.13.0</li>
<li>nvm list   查看当前nvm下的node版本列表及当前的版本选择</li>
</ol>
</li>
<li><p>配置npm代理(因为npm安装使用次数较多,为了速度问题所以选择配置代理)</p>
<ol>
<li>选择华为的代理  华为镜像开源站( <a href="https://mirrors.huaweicloud.com/" target="_blank" rel="noopener">https://mirrors.huaweicloud.com/</a> )</li>
<li>在先放找到npm 按照说明进行配置即可,也可以执行如下代码</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm config set registry https://mirrors.huaweicloud.com/repository/npm/</span><br><span class="line">npm cache clean -f</span><br></pre></td></tr></table></figure>





</li>
</ol>
]]></content>
      <categories>
        <category>软件安装</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>yaml文件格式及python解析</title>
    <url>/htwm_open_sesame/2019/10/26/IT%E6%8A%80%E6%9C%AF/yaml%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%8F%8Apython%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<h1 id="yaml文件格式及python解析"><a href="#yaml文件格式及python解析" class="headerlink" title="yaml文件格式及python解析"></a>yaml文件格式及python解析</h1><h2 id="用途及基本规则"><a href="#用途及基本规则" class="headerlink" title="用途及基本规则"></a>用途及基本规则</h2><ul>
<li>常用于配置文件</li>
<li>大小写敏感</li>
<li>使用缩进表示嵌套</li>
<li>使用空格表示缩进,不允许使用  <kbd>Tab</kbd> 键作为缩进</li>
<li>缩进的空格数目没有实际意义,左侧对其即为同级</li>
</ul>
<a id="more"></a>



<h2 id="Python解析"><a href="#Python解析" class="headerlink" title="Python解析"></a>Python解析</h2><ul>
<li>涉及到的包 pip install PyYAML</li>
<li>示例代码</li>
</ul>
<p>yaml文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># test.yaml</span></span><br><span class="line"><span class="attr">age:</span> <span class="number">37</span></span><br><span class="line"><span class="attr">spouse:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">Jane</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">  age:</span> <span class="number">25</span></span><br><span class="line"><span class="attr">children:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">Jimmy</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">    age:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">  - name1:</span> <span class="string">Jenny</span> <span class="string">Smith</span></span><br><span class="line"><span class="attr">    age1:</span> <span class="number">12</span></span><br></pre></td></tr></table></figure>

<p>python 解析示例</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'test.yaml'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>)<span class="keyword">as</span> fr:</span><br><span class="line">        data = yaml.load(fr, Loader=yaml.Loader)</span><br><span class="line">    print(data)</span><br><span class="line"><span class="comment"># &#123;'age': 37, 'spouse': &#123;'name': 'Jane Smith', 'age': 25&#125;, 'children': [&#123;'name': 'Jimmy Smith', 'age': 15&#125;, &#123;'name1': 'Jenny Smith', 'age1': 12&#125;]&#125;</span></span><br></pre></td></tr></table></figure>





<h2 id="yaml语法"><a href="#yaml语法" class="headerlink" title="yaml语法"></a>yaml语法</h2><ul>
<li>参考 <a href="http://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener">YAML语言教程 阮一峰</a></li>
</ul>
]]></content>
      <categories>
        <category>IT技术</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>yaml</tag>
      </tags>
  </entry>
  <entry>
    <title>vue创建组件</title>
    <url>/htwm_open_sesame/2019/10/23/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/vue%E5%88%9B%E5%BB%BA%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="vue创建组件及发布流程"><a href="#vue创建组件及发布流程" class="headerlink" title="vue创建组件及发布流程"></a>vue创建组件及发布流程</h1><h2 id="创建组件"><a href="#创建组件" class="headerlink" title="创建组件"></a>创建组件</h2><ol>
<li>首先创建组件代码</li>
</ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h3&gt;this is a web component  created in vue&lt;/h3&gt;  </span><br><span class="line">    &lt;div&gt; My name is &#123;&#123;name&#125;&#125; &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props:&#123;</span><br><span class="line">    name: &#123;type: String,default:&quot;mark&quot;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><a id="more"></a>


<ol start="2">
<li>使用cli 进行组件封装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vue build --target wc .\src\components\my-component.vue</span><br><span class="line"></span><br><span class="line">- 踩坑 使用vue build 单个文件,文件名称中需要使用 <span class="string">"-"</span> 符号作为文件命名连接符</span><br></pre></td></tr></table></figure>





<p>1. </p>
]]></content>
      <categories>
        <category>前端开发</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>component</tag>
      </tags>
  </entry>
  <entry>
    <title>如何处理json文件结尾的逗号</title>
    <url>/htwm_open_sesame/2019/10/20/IT%E6%8A%80%E6%9C%AF/%E5%A6%82%E4%BD%95%E5%A4%84%E7%90%86json%E6%96%87%E4%BB%B6%E7%BB%93%E5%B0%BE%E7%9A%84%E9%80%97%E5%8F%B7/</url>
    <content><![CDATA[<h1 id="python如何处理json文件结尾多余的逗号"><a href="#python如何处理json文件结尾多余的逗号" class="headerlink" title="python如何处理json文件结尾多余的逗号"></a>python如何处理json文件结尾多余的逗号</h1><p>问题描述, json文件结尾是不允许使用逗号的</p>
<p>正确格式如下:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</span><br><span class="line">    <span class="attr">"key2"</span>: <span class="string">"value2"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但如果使用json作为配置文件时,人为输入可能如下</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"key1"</span>: <span class="string">"value1"</span>,</span><br><span class="line">    <span class="attr">"key2"</span>: <span class="string">"value2"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在使用上述格式的文件时, json.loads文件会报错</p>
<a id="more"></a>

<p>参考来源 <a href="https://stackoverflow.com/questions/23705304/can-json-loads-ignore-trailing-commas" target="_blank" rel="noopener">https://stackoverflow.com/questions/23705304/can-json-loads-ignore-trailing-commas</a></p>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>使用 jsoncomment 包进行解析</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> jsoncomment <span class="keyword">import</span> JsonComment</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(filename) <span class="keyword">as</span> data_file:    </span><br><span class="line">    parser = JsonComment(json)</span><br><span class="line">    data = parser.load(data_file)</span><br></pre></td></tr></table></figure>

<p>缺陷 会从字符串中删除逗号 例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> jsoncomment <span class="keyword">import</span> JsonComment</span><br><span class="line">string = <span class="string">'&#123;"key1": "&#123;my special value,&#125;"&#125;'</span></span><br><span class="line">parser = JsonComment()</span><br><span class="line">json_boj = parser.loads(string)</span><br><span class="line">print(json_boj)</span><br><span class="line"><span class="comment"># &#123;'key1': '&#123;my special value&#125;'&#125;</span></span><br><span class="line"><span class="comment"># 原本值中的字符串逗号也被删除了</span></span><br></pre></td></tr></table></figure>

<p>局限: 原本值中的字符串逗号也被删除了</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>先通过python 将字符串进行eval,同时 替换null, true false例如</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ast, json</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">clean_json</span><span class="params">(str)</span>:</span></span><br><span class="line">  str = str.replace(<span class="string">'null'</span>, <span class="string">'None'</span>).replace(<span class="string">'true'</span>, <span class="string">'True'</span>).replace(<span class="string">'false'</span>, <span class="string">'False'</span>)</span><br><span class="line">  <span class="keyword">return</span> json.dumps(ast.literal_eval(str))</span><br></pre></td></tr></table></figure>

<p>局限: </p>
<ol>
<li>会破坏原本字符串中包含 null, true, false </li>
<li>即算使用 ast.literal_eval 也需要考虑一些安全性的问题</li>
</ol>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ul>
<li>json最好写对 :joy:, 如果作为需要手动添加内容的配置文件,最好还是改格式把</li>
</ul>
]]></content>
      <categories>
        <category>IT技术</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>关于</title>
    <url>/htwm_open_sesame/about/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/htwm_open_sesame/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>归档</title>
    <url>/htwm_open_sesame/archives/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>标签</title>
    <url>/htwm_open_sesame/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/htwm_open_sesame/lib/canvas-nest/canvas-nest-nomobile.min.js</url>
    <content><![CDATA[!function(){
	var userAgentInfo = navigator.userAgent;
    var Agents = ["iPad", "iPhone", "Android", 
          "SymbianOS", "Windows Phone",
           "iPod", "webOS", "BlackBerry", "IEMobile"];
    for (var v = 0; v < Agents.length; v++) {
      if (userAgentInfo.indexOf(Agents[v]) > 0) {
        return;
      }
    }
	function o(w,v,i){return w.getAttribute(v)||i}function j(i){return document.getElementsByTagName(i)}function l(){var i=j("script"),w=i.length,v=i[w-1];return{l:w,z:o(v,"zIndex",-1),o:o(v,"opacity",0.5),c:o(v,"color","0,0,0"),n:o(v,"count",99)}}function k(){r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function b(){e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i){i.x+=i.xa,i.y+=i.ya,i.xa*=i.x>r||i.x<0?-1:1,i.ya*=i.y>n||i.y<0?-1:1,e.fillRect(i.x-0.5,i.y-0.5,1,1);for(v=0;v<w.length;v++){x=w[v];if(i!==x&&null!==x.x&&null!==x.y){B=i.x-x.x,z=i.y-x.y,y=B*B+z*z;y<x.max&&(x===f&&y>=x.max/2&&(i.x-=0.03*B,i.y-=0.03*z),A=(x.max-y)/x.max,e.beginPath(),e.lineWidth=A/2,e.strokeStyle="rgba("+s.c+","+(A+0.2)+")",e.moveTo(i.x,i.y),e.lineTo(x.x,x.y),e.stroke())}}w.splice(w.indexOf(i),1)}),m(b)}var u=document.createElement("canvas"),s=l(),c="c_n"+s.l,e=u.getContext("2d"),r,n,m=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(i){window.setTimeout(i,1000/45)},a=Math.random,f={x:null,y:null,max:20000};u.id=c;u.style.cssText="position:fixed;top:0;left:0;z-index:"+s.z+";opacity:"+s.o;j("body")[0].appendChild(u);k(),window.onresize=k;window.onmousemove=function(i){i=i||window.event,f.x=i.clientX,f.y=i.clientY},window.onmouseout=function(){f.x=null,f.y=null};for(var t=[],p=0;s.n>p;p++){var h=a()*r,g=a()*n,q=2*a()-1,d=2*a()-1;t.push({x:h,y:g,xa:q,ya:d,max:6000})}setTimeout(function(){b()},100)}();]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/htwm_open_sesame/lib/canvas-nest/canvas-nest.min.js</url>
    <content><![CDATA[!function(){function o(w,v,i){return w.getAttribute(v)||i}function j(i){return document.getElementsByTagName(i)}function l(){var i=j("script"),w=i.length,v=i[w-1];return{l:w,z:o(v,"zIndex",-1),o:o(v,"opacity",0.5),c:o(v,"color","0,0,0"),n:o(v,"count",99)}}function k(){r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}function b(){e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i){i.x+=i.xa,i.y+=i.ya,i.xa*=i.x>r||i.x<0?-1:1,i.ya*=i.y>n||i.y<0?-1:1,e.fillRect(i.x-0.5,i.y-0.5,1,1);for(v=0;v<w.length;v++){x=w[v];if(i!==x&&null!==x.x&&null!==x.y){B=i.x-x.x,z=i.y-x.y,y=B*B+z*z;y<x.max&&(x===f&&y>=x.max/2&&(i.x-=0.03*B,i.y-=0.03*z),A=(x.max-y)/x.max,e.beginPath(),e.lineWidth=A/2,e.strokeStyle="rgba("+s.c+","+(A+0.2)+")",e.moveTo(i.x,i.y),e.lineTo(x.x,x.y),e.stroke())}}w.splice(w.indexOf(i),1)}),m(b)}var u=document.createElement("canvas"),s=l(),c="c_n"+s.l,e=u.getContext("2d"),r,n,m=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(i){window.setTimeout(i,1000/45)},a=Math.random,f={x:null,y:null,max:20000};u.id=c;u.style.cssText="position:fixed;top:0;left:0;z-index:"+s.z+";opacity:"+s.o;j("body")[0].appendChild(u);k(),window.onresize=k;window.onmousemove=function(i){i=i||window.event,f.x=i.clientX,f.y=i.clientY},window.onmouseout=function(){f.x=null,f.y=null};for(var t=[],p=0;s.n>p;p++){var h=a()*r,g=a()*n,q=2*a()-1,d=2*a()-1;t.push({x:h,y:g,xa:q,ya:d,max:6000})}setTimeout(function(){b()},100)}();]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/htwm_open_sesame/lib/canvas-nest/README.html</url>
    <content><![CDATA[<h1 align="center"><a href="https://github.com/hustcc/canvas-nest.js" target="_blank" rel="noopener">canvas-nest.js</a> for <a href="https://github.com/theme-next" target="_blank" rel="noopener">NexT</a></h1><h1 align="center">Installation</h1><h2>If you want to use the CDN instead of clone this repo, please jump to the Step 3.</h2><h2 align="center">Step 1 &rarr; Go to NexT dir</h2><p>Change dir to <strong>NexT</strong> directory. There must be <code>layout</code>, <code>source</code>, <code>languages</code> and other directories:</p><a id="more"></a>








<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next</span><br><span class="line">$ ls</span><br><span class="line">_config.yml  crowdin.yml  docs  gulpfile.js  languages  layout  LICENSE.md  package.json  README.md  scripts  <span class="built_in">source</span></span><br></pre></td></tr></table></figure>

<h2 align="center">Step 2 &rarr; Get module</h2>

<p>Install module to <code>source/lib</code> directory:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/theme-next-canvas-nest <span class="built_in">source</span>/lib/canvas-nest</span><br></pre></td></tr></table></figure>

<h2 align="center">Step 3 &rarr; Set it up</h2>

<p>Enable module in <strong>NexT</strong> <code>_config.yml</code> file:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">canvas_nest:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  onmobile:</span> <span class="literal">true</span> <span class="comment"># display on mobile or not</span></span><br><span class="line"><span class="attr">  color:</span> <span class="string">'0,0,255'</span> <span class="comment"># RGB values, use ',' to separate</span></span><br><span class="line"><span class="attr">  opacity:</span> <span class="number">0.5</span> <span class="comment"># the opacity of line: 0~1</span></span><br><span class="line"><span class="attr">  zIndex:</span> <span class="bullet">-1</span> <span class="comment"># z-index property of the background</span></span><br><span class="line"><span class="attr">  count:</span> <span class="number">99</span> <span class="comment"># the number of lines</span></span><br></pre></td></tr></table></figure>

<p><strong>And, if you wants to use the CDN, then need to set:</strong></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="string">...</span></span><br><span class="line"><span class="attr">  canvas_nest:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@latest/canvas-nest.min.js</span></span><br><span class="line"><span class="attr">  canvas_nest_nomobile:</span> <span class="string">//cdn.jsdelivr.net/gh/theme-next/theme-next-canvas-nest@latest/canvas-nest-nomobile.min.js</span></span><br></pre></td></tr></table></figure>

<h1 align="center">Update</h1>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> themes/next/<span class="built_in">source</span>/lib/canvas-nest</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
